<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucky、boy</title>
  
  
  <link href="/rz168.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/Piouscc/rz168.io.git/"/>
  <updated>2020-06-22T08:12:43.285Z</updated>
  <id>https://github.com/Piouscc/rz168.io.git/</id>
  
  <author>
    <name>Lucky、boy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zookeeper-集群搭建</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/06/22/zookeeper-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/06/22/zookeeper-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2020-06-22T08:09:49.000Z</published>
    <updated>2020-06-22T08:12:43.285Z</updated>
    
    <content type="html"><![CDATA[<p>Zookeeper-集群搭建</p><a id="more"></a><p>服务器信息如下(注：以下信息需要配置在/etc/hosts里面):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.2      ch02    zk01</span><br><span class="line">192.168.1.3      ch03    zk02</span><br><span class="line">192.168.1.4      ch04    zk03</span><br></pre></td></tr></table></figure><p>###1、为什么zookeeper节点数为奇数？<br>容错率<br>　　首先从容错率来说明：（需要保证集群能够有半数进行投票）<br>　　2台服务器，至少2台正常运行才行（2的半数为1，半数以上最少为2），正常运行1台服务器都不允许挂掉，但是相对于 单节点服务器，2台服务器还有两个单点故障，所以直接排除了。<br>　　3台服务器，至少2台正常运行才行（3的半数为1.5，半数以上最少为2），正常运行可以允许1台服务器挂掉<br>　　4台服务器，至少3台正常运行才行（4的半数为2，半数以上最少为3），正常运行可以允许1台服务器挂掉<br>　　5台服务器，至少3台正常运行才行（5的半数为2.5，半数以上最少为3），正常运行可以允许2台服务器挂掉<br>防脑裂<br>    脑裂集群的脑裂通常是发生在节点之间通信不可达的情况下，集群会分裂成不同的小集群，小集群各自选出自己的leader节点，导致原有的集群出现多个leader节点的情况，这就是脑裂。<br>　　3台服务器，投票选举半数为1.5，一台服务裂开，和另外两台服务器无法通行，这时候2台服务器的集群（2票大于半数1.5票），所以可以选举出leader，而 1 台服务器的集群无法选举。<br>　　4台服务器，投票选举半数为2，可以分成 1,3两个集群或者2,2两个集群，对于 1,3集群，3集群可以选举；对于2,2集群，则不能选择，造成没有leader节点。<br>　　5台服务器，投票选举半数为2.5，可以分成1,4两个集群，或者2,3两集群，这两个集群分别都只能选举一个集群，满足zookeeper集群搭建数目。<br>　　以上分析，我们从容错率以及防止脑裂两方面说明了3台服务器是搭建集群的最少数目，4台发生脑裂时会造成没有leader节点的错误。<br>###2、下载zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官网下载地址：http://mirror.bit.edu.cn/apache/zookeeper/</span><br></pre></td></tr></table></figure><p>###3、安装jdk<br>略<br>对应版本为以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ch03 ~]<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">"1.8.0_252"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_252-b09)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)</span><br></pre></td></tr></table></figure><p>###4、解压及初始化zookeeper数据目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">mv zookeeper-3.6.1-bin /usr/<span class="built_in">local</span>/zookeeper</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/zookeeper/conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line">mkdir /data/zookeeper  <span class="comment">#之后修改配置文件时会用到</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /data/zookeeper/myid <span class="comment">#每台服务器都要执行，但id要不一样，如：1 2 3</span></span><br></pre></td></tr></table></figure><p>###5、修改配置zookeeper配置文件zoo.cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/data/zookeeper</span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br><span class="line">server.1=zk01:2888:3888</span><br><span class="line">server.2=zk02:2888:3888</span><br><span class="line">server.3=zk03:2888:3888</span><br></pre></td></tr></table></figure><p>###6、现在已经配置好一台，其它两台可以直接复制过去（注：事先要做好免密登陆）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/<span class="built_in">local</span>/zookeeper zk02:/usr/<span class="built_in">local</span>/</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/zookeeper zk03:/usr/<span class="built_in">local</span>/</span><br></pre></td></tr></table></figure><p>###7、启动zookeeper服务（每台服务器都要执行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkServer.sh start</span><br><span class="line">出现以下代表为启动成功</span><br><span class="line">[root@ch03 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh stop</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br></pre></td></tr></table></figure><p>###8、查看zookeeper自身的身份可用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ch03 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><p>###9、登陆到zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkCli.sh -server</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zookeeper-集群搭建&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Dnsmasq-简单搭建</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/21/Dnsmasq-%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/21/Dnsmasq-%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-21T08:32:15.000Z</published>
    <updated>2020-05-21T08:33:46.827Z</updated>
    
    <content type="html"><![CDATA[<p>Dnsmasq-简单安装<br> <a id="more"></a><br>最近同事工作中遇到要使用不同的DNS来解析不同域名的情况，<br>想了想就造反Dnsmasq最合适。<br>下面简单搭建记录</p><p>编辑配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dnsmasq config, for a complete example, see:</span></span><br><span class="line"><span class="comment">#  http://oss.segetech.com/intra/srv/dnsmasq.conf</span></span><br><span class="line"><span class="comment">#log all dns queries</span></span><br><span class="line"><span class="built_in">log</span>-queries</span><br><span class="line"><span class="comment">#dont use hosts nameservers</span></span><br><span class="line">no-resolv</span><br><span class="line"><span class="comment">#use cloudflare as default nameservers, prefer 1^4</span></span><br><span class="line">server=1.1.1.1</span><br><span class="line">server=233.5.5.5</span><br><span class="line"><span class="comment">#strict-order</span></span><br><span class="line"><span class="comment">#serve all .company queries using a specific nameserver</span></span><br><span class="line"><span class="comment">#server=/company/10.0.0.1</span></span><br><span class="line"><span class="comment">#explicitly define host-ip mappings（自定义域名IP配置）</span></span><br><span class="line"><span class="comment">#address=/a1.aa.com/192.168.1.168</span></span><br><span class="line">address=/a3.aa.com/192.168.1.111</span><br></pre></td></tr></table></figure><p>启动docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    --name dnsmasq \</span><br><span class="line">    -d \</span><br><span class="line">    -p 53:53/udp \</span><br><span class="line">    -p 8088:8080 \</span><br><span class="line">    -v /opt/dns/dnsmasq.conf:/etc/dnsmasq.conf \</span><br><span class="line">    -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">    -e <span class="string">"HTTP_USER=admin"</span> \</span><br><span class="line">    -e <span class="string">"HTTP_PASS=admin"</span> \</span><br><span class="line">    --restart always \</span><br><span class="line">    jpillora/dnsmasq</span><br></pre></td></tr></table></figure><p>访问Dnsmasq网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://IP:8088</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dnsmasq-简单安装&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>zabbix-4.2.3-安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/20/zabbix-4-2-3-%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/20/zabbix-4-2-3-%E5%AE%89%E8%A3%85/</id>
    <published>2020-05-20T06:02:09.000Z</published>
    <updated>2020-05-20T13:28:39.700Z</updated>
    
    <content type="html"><![CDATA[<p>Zabbix安装篇</p><a id="more"></a><p>1.1 背景：<br>    线上业务至关重要，为了保证业务正常运行及遇到突然情况得以告知运维人员，下面将进行简单的监控软件zabix安装，当然除了还有其它的监控软件。<br>1.2 监控软件的介绍：<br>    cacti、nagios、zabbix、smokeping、open-falcon等等<br>    cacti、smokeping偏向于基础监控，成图非常漂亮<br>    cacti、nagios、zabbix服务端监控中心，需要php环境支持，其中zabbix和cacti都需要mysql作为数据存储，            nagios不用存储历史数据，注重服务或者监控项的状态，zabbix会获取服务或者监控项目的数据，会把数据记录到数据库里，从而可以成图<br>       open-falcon为小米公司开发，开源后受到诸多大公司和运维工程师的追捧，适合大企业，滴滴、360、新浪微博、京东等大公司在使用这款监控软件,但后续以介绍zabbix为主<br>1.3 zabbix的安装<br>    现在我服务器上已经编译安装好了LNMP环境，如果没有可以执行下面的命令进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y make mariadb-server mariadb httpd php mysql-devel gcc net-snmp-devel curl-devel perl-DBI php-gd php-mysql php-bcmath php-mbstring php-xml unixODBC-devel OpenIPMI-devel libxml2-devel libevent-devel libevent  php-gd php-LDAP php-ldap php-xmlreader php-xmlwriter mysql-devel net-snmp-devel</span><br></pre></td></tr></table></figure><p> 1.4 新建一个zabbix账户并创建数据库赋予zabbix权限（下面命令为免登陆远程创建，可以对应修改）<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  useradd zabbix -s /sbin/nologin</span><br><span class="line">mysql -e <span class="string">"create database zabbix character set utf8 collate utf8_bin;"</span></span><br><span class="line">mysql -e <span class="string">"grant all on zabbix.* to zabbix@localhost identified by 'zabbix';"</span></span><br><span class="line">mysql -e <span class="string">"flush privileges;"</span></span><br></pre></td></tr></table></figure><br> 1.5 下载zabbix，并且导入数据库，我这原有最新版zabbix4.2.3所以还是直接使用，若有需要可以到官网下载其它版本也可。<br>(下载URL:<a href="https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/4.2.3/zabbix-4.2.3.tar.gz" target="_blank" rel="noopener">https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/4.2.3/zabbix-4.2.3.tar.gz</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line"> tar -xvf zabbix-4.2.3.tar.gz</span><br><span class="line"> <span class="built_in">cd</span> zabbix-4.2.3/database/mysql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; schema.sql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; images.sql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; data.sql</span><br></pre></td></tr></table></figure><p>1.6 编译安装zabbix_server，如果提示错误，就对应yum安装插件包再重新编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-server --<span class="built_in">enable</span>-agent --with-gettext --with-mysql --with-net-snmp --with-libcurl --with-libxml2 --with-openipmi --with-unixodbc --prefix=/usr/<span class="built_in">local</span>/zabbix</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>1.7 编辑httpd.conf文件，使其支持php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIndex index.html index.php</span><br></pre></td></tr></table></figure><p>1.8 修改zabbix_server的配置文件，对应的数据库账号密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><p>1.9 复制启动脚本，并进行对应修改加上执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  cp misc/init.d/fedora/core5/zabbix_server /etc/init.d/</span><br><span class="line">  cp misc/init.d/fedora/core5/zabbix_agentd /etc/init.d/</span><br><span class="line">vim /etc/init.d/zabbix_server</span><br><span class="line">  ZABBIX_BIN=<span class="string">"/usr/local/sbin/zabbix_server"</span>--&gt;ZABBIX_BIN=<span class="string">"/usr/local/zabbix/sbin/zabbix_server"</span></span><br><span class="line">  vim /etc/init.d/zabbix_agentd</span><br><span class="line">  ZABBIX_BIN=<span class="string">"/usr/local/sbin/zabbix_agentd"</span>--&gt;ZABBIX_BIN=<span class="string">"/usr/local/zabbix/sbin/zabbix_agentd"</span></span><br><span class="line">  chmod +x /etc/init.d/zabbix*</span><br></pre></td></tr></table></figure><p>1.10 启动服务端和客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/zabbix_server</span><br><span class="line">/etc/init.d/zabbix_agentd</span><br></pre></td></tr></table></figure><p>1.11 修改php.ini文件支持大小，不然web会容易报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php.ini </span><br><span class="line">max_execution_time = 300</span><br><span class="line">max_input_time = 300</span><br><span class="line">date.timezone =Asia/Shanghai</span><br><span class="line">post_max_size = 32M</span><br></pre></td></tr></table></figure><p>1.12 复制zabbix的php项目到web的目录下，并且赋予用户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -rf php /var/www/html/zabbix</span><br><span class="line">chown zabbix:zabbix -R /var/www/html/zabbix</span><br></pre></td></tr></table></figure><p>1.13 访问web页面在浏览器上输入：<a href="http://IP/zabbix" target="_blank" rel="noopener">http://IP/zabbix</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> --&gt;默认下一步</span><br><span class="line">--&gt;插件检测页面，若有不通过的，直接yum，或者百度，下一步</span><br><span class="line">--&gt;配置数据库，按照实际修改</span><br><span class="line">--&gt;配置zabbix_server，默认或者实际修改</span><br><span class="line">--&gt;install完，默认的账号密码为Admin/zabbix</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zabbix安装篇&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="zabbix" scheme="https://github.com/Piouscc/rz168.io.git/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse-server-集群部署</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/19/ClickHouse-server-%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/19/ClickHouse-server-%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</id>
    <published>2020-05-19T03:20:58.000Z</published>
    <updated>2020-06-20T06:28:19.988Z</updated>
    
    <content type="html"><![CDATA[<p>引入一个问题：什么是Clickhouse？</p><a id="more"></a><p>ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)。<br>常见的行式数据库系统有：MySQL、Postgres和MS SQL Server。<br>常见的列式数据库有： Vertica、 Paraccel (Actian Matrix，Amazon Redshift)、 Sybase IQ、 Exasol、 Infobright、 InfiniDB、 MonetDB (VectorWise， Actian Vector)、 LucidDB、 SAP HANA、 Google Dremel、 Google PowerDrill、 Druid、 kdb+。<br>关于Clickhouse性能，可以参考官网（有中文版的）：<a href="https://clickhouse.tech/docs/zh/introduction/performance/" target="_blank" rel="noopener">https://clickhouse.tech/docs/zh/introduction/performance/</a></p><p>主要特性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">真正的面向列的DBMS</span><br><span class="line">实时数据更新</span><br><span class="line">SQL语法支持</span><br><span class="line">多核并行处理</span><br><span class="line">数据高效压缩</span><br><span class="line">分布式处理</span><br><span class="line">数据复制完整性</span><br><span class="line">丰富的索引</span><br><span class="line">集群式管理</span><br><span class="line">可直接读取MySQL数据</span><br><span class="line">适合于在线实时查询</span><br><span class="line">支持近似预估计算</span><br></pre></td></tr></table></figure><p>目前缺点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不支持二级索引</span><br><span class="line">不支持事物</span><br><span class="line">缺乏全面的UPDATE|DELETE的实现</span><br></pre></td></tr></table></figure><p>应用场景：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">海量数据分析、报表和监控</span><br></pre></td></tr></table></figure><p>单机部署，下载文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-client-20.1.4.14-2.noarch.rpm</span><br><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-server-20.1.4.14-2.noarch.rpm</span><br><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-20.1.4.14-2.x86_64.rpm</span><br></pre></td></tr></table></figure><p>下载完成后，直接通过rpm方式安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh clickhouse-*</span><br></pre></td></tr></table></figure><p>安装完成后的目录结构,server和client都是在etc下,由于客户端不用配置，这里主要看server端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 clickhouse-server]<span class="comment"># tree </span></span><br><span class="line">.</span><br><span class="line">├── config.d</span><br><span class="line">├── config.xml   <span class="comment">#配置文件</span></span><br><span class="line">├── preprocessed -&gt; /var/lib/clickhouse//preprocessed_configs</span><br><span class="line">├── users.d</span><br><span class="line">├── metrika.xml  <span class="comment">#集群配置文件，此文件需要自己创建</span></span><br><span class="line">└── users.xml <span class="comment">#用户配置文件</span></span><br></pre></td></tr></table></figure><p>创建所需目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/clickhouse/<span class="built_in">log</span>/</span><br><span class="line">mkdir -p /data/clickhouse/tmp/</span><br><span class="line">touch /data/clickhouse/<span class="built_in">log</span>/server.log</span><br><span class="line">touch /data/clickhouse/<span class="built_in">log</span>/error.log</span><br><span class="line">chown clickhouse.clickhouse -R /data/clickhouse</span><br></pre></td></tr></table></figure><p>配置config.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;logger&gt;</span><br><span class="line">        &lt;level&gt;trace&lt;/level&gt;</span><br><span class="line">        &lt;<span class="built_in">log</span>&gt;/data/clickhouse/<span class="built_in">log</span>/server.log&lt;/<span class="built_in">log</span>&gt;</span><br><span class="line">        &lt;errorlog&gt;/data/clickhouse/<span class="built_in">log</span>/error.log&lt;/errorlog&gt;</span><br><span class="line">        &lt;size&gt;1000M&lt;/size&gt;</span><br><span class="line">        &lt;count&gt;10&lt;/count&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;http_port&gt;8123&lt;/http_port&gt;</span><br><span class="line">    &lt;tcp_port&gt;9000&lt;/tcp_port&gt;</span><br><span class="line">    &lt;interserver_http_port&gt;9009&lt;/interserver_http_port&gt;</span><br><span class="line">    &lt;listen_host&gt;0.0.0.0&lt;/listen_host&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;path&gt;/data/clickhouse/&lt;/path&gt;</span><br><span class="line">    &lt;tmp_path&gt;/data/clickhouse/tmp/&lt;/tmp_path&gt;</span><br><span class="line">    &lt;users_config&gt;users.xml&lt;/users_config&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;default_profile&gt;default&lt;/default_profile&gt;</span><br><span class="line">    &lt;default_database&gt;default&lt;/default_database&gt;</span><br><span class="line">    &lt;remote_servers incl=<span class="string">"clickhouse_remote_servers"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;query_log&gt;</span><br><span class="line">        &lt;database&gt;system&lt;/database&gt;</span><br><span class="line">        &lt;table&gt;query_log&lt;/table&gt;</span><br><span class="line">        &lt;partition_by&gt;toYYYYMM(event_date)&lt;/partition_by&gt;</span><br><span class="line">        &lt;flush_interval_milliseconds&gt;7500&lt;/flush_interval_milliseconds&gt;</span><br><span class="line">    &lt;/query_log&gt;</span><br><span class="line">    &lt;mark_cache_size&gt;5368709120&lt;/mark_cache_size&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>然后启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start clickhouse-server</span><br></pre></td></tr></table></figure><p>登陆clickhouse,此处因为use.xml没配置默认用户不配置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=</span><br><span class="line"></span><br><span class="line">[root@ch01 clickhouse-server]<span class="comment"># clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=</span></span><br><span class="line">ClickHouse client version 20.1.4.14 (official build).</span><br><span class="line">Connecting to 127.0.0.1:6767 as user stat67.</span><br><span class="line">Connected to ClickHouse server version 20.1.4 revision 54431.</span><br><span class="line"></span><br><span class="line">ck-0001 :)</span><br></pre></td></tr></table></figure><hr><p>以上就是Clickhouse单机部署，下面部署则为Clickhouse集群一分片两副本，两分片两副本，三分片两副本，同理<br>服务器信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ch01 192.168.1.2</span><br><span class="line">ch02 192.168.1.3</span><br></pre></td></tr></table></figure><p>由于Clickhouse集群基于zookeeper，所以先配置zk集群<br>zookeeper下载与解压，注意这理下载zk，一定要下载带bin，不然没法用（ch01,ch02安装同理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/ &amp;&amp; wget https://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">tar -xvf apache-zookeeper-3.6.1-bin.tar.gz &amp;&amp; mv apache-zookeeper-3.6.1-bin ../zookeeper</span><br><span class="line"><span class="built_in">cd</span> ../zookeeper/conf &amp;&amp; cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p>配置zookeeper的配置文件zoo.cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 conf]<span class="comment"># more zoo.cfg</span></span><br><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/data/zookeeper    <span class="comment">#此目录需要创建</span></span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br><span class="line">server.1=ch0001:2888:3888</span><br><span class="line">server.2=ch0002:2888:3888</span><br></pre></td></tr></table></figure><p>启动zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkServer.sh start</span><br></pre></td></tr></table></figure><p>查看自身身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 conf]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line">[root@ck02 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><p>配置clickhouse  config.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;logger&gt;</span><br><span class="line">        &lt;level&gt;trace&lt;/level&gt;</span><br><span class="line">        &lt;<span class="built_in">log</span>&gt;/data/clickhouse/<span class="built_in">log</span>/server.log&lt;/<span class="built_in">log</span>&gt;</span><br><span class="line">        &lt;errorlog&gt;/data/clickhouse/<span class="built_in">log</span>/error.log&lt;/errorlog&gt;</span><br><span class="line">        &lt;size&gt;1000M&lt;/size&gt;</span><br><span class="line">        &lt;count&gt;10&lt;/count&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;http_port&gt;8123&lt;/http_port&gt;</span><br><span class="line">    &lt;tcp_port&gt;6767&lt;/tcp_port&gt;</span><br><span class="line">    &lt;interserver_http_port&gt;9009&lt;/interserver_http_port&gt;</span><br><span class="line">    &lt;listen_host&gt;0.0.0.0&lt;/listen_host&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;path&gt;/data/clickhouse/&lt;/path&gt;</span><br><span class="line">    &lt;tmp_path&gt;/data/clickhouse/tmp/&lt;/tmp_path&gt;</span><br><span class="line">    &lt;users_config&gt;users.xml&lt;/users_config&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;default_profile&gt;default&lt;/default_profile&gt;</span><br><span class="line">    &lt;default_database&gt;default&lt;/default_database&gt;</span><br><span class="line">    &lt;remote_servers incl=<span class="string">"clickhouse_remote_servers"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;query_log&gt;</span><br><span class="line">        &lt;database&gt;system&lt;/database&gt;</span><br><span class="line">        &lt;table&gt;query_log&lt;/table&gt;</span><br><span class="line">        &lt;partition_by&gt;toYYYYMM(event_date)&lt;/partition_by&gt;</span><br><span class="line">        &lt;flush_interval_milliseconds&gt;7500&lt;/flush_interval_milliseconds&gt;</span><br><span class="line">    &lt;/query_log&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;zookeeper incl=<span class="string">"zookeeper-servers"</span> optional=<span class="string">"true"</span> /&gt;</span><br><span class="line">    &lt;macros incl=<span class="string">"macros"</span> optional=<span class="string">"true"</span> /&gt;</span><br><span class="line">    &lt;include_from&gt;/etc/clickhouse-server/metrika.xml&lt;/include_from&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;mark_cache_size&gt;5368709120&lt;/mark_cache_size&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>配置clickhouse集群文件metrika.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;yandex&gt;</span><br><span class="line">&lt;clickhouse_remote_servers&gt;</span><br><span class="line">    &lt;report_shards_replicas&gt;</span><br><span class="line">        &lt;shard&gt;</span><br><span class="line">            &lt;weight&gt;1&lt;/weight&gt;</span><br><span class="line">            &lt;internal_replication&gt;<span class="literal">true</span>&lt;/internal_replication&gt;</span><br><span class="line">            &lt;replica&gt;</span><br><span class="line">                &lt;host&gt;192.168.1.2&lt;/host&gt;</span><br><span class="line">                &lt;port&gt;9000&lt;/port&gt;</span><br><span class="line">                &lt;user&gt;default&lt;/user&gt;</span><br><span class="line">                &lt;password&gt;6lYaUiFi&lt;/password&gt;</span><br><span class="line">            &lt;/replica&gt;</span><br><span class="line">            &lt;replica&gt;</span><br><span class="line">                &lt;host&gt;192.168.1.3&lt;/host&gt;</span><br><span class="line">                &lt;port&gt;9000&lt;/port&gt;</span><br><span class="line">                &lt;user&gt;default&lt;/user&gt;</span><br><span class="line">                &lt;password&gt;6lYaUiFi&lt;/password&gt;</span><br><span class="line">            &lt;/replica&gt;</span><br><span class="line">        &lt;/shard&gt;</span><br><span class="line">    &lt;/report_shards_replicas&gt;</span><br><span class="line">&lt;/clickhouse_remote_servers&gt;</span><br><span class="line"> </span><br><span class="line">&lt;macros&gt;</span><br><span class="line">    &lt;shard&gt;shard_01&lt;/shard&gt;</span><br><span class="line">    &lt;replica&gt;replica_01&lt;/replica&gt;</span><br><span class="line">&lt;/macros&gt;</span><br><span class="line"> </span><br><span class="line">&lt;networks&gt;</span><br><span class="line">   &lt;ip&gt;::/0&lt;/ip&gt;</span><br><span class="line">&lt;/networks&gt;</span><br><span class="line"> </span><br><span class="line">&lt;zookeeper-servers&gt;</span><br><span class="line">    &lt;node index=<span class="string">"1"</span>&gt;</span><br><span class="line">        &lt;host&gt;192.168.1.2&lt;/host&gt;</span><br><span class="line">        &lt;port&gt;2181&lt;/port&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line"></span><br><span class="line">    &lt;node index=<span class="string">"2"</span>&gt;</span><br><span class="line">        &lt;host&gt;192.168.1.3&lt;/host&gt;</span><br><span class="line">        &lt;port&gt;2181&lt;/port&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">&lt;/zookeeper-servers&gt;</span><br><span class="line"> </span><br><span class="line">&lt;clickhouse_compression&gt;</span><br><span class="line">    &lt;<span class="keyword">case</span>&gt;</span><br><span class="line">        &lt;min_part_size&gt;10000000000&lt;/min_part_size&gt;</span><br><span class="line">        &lt;min_part_size_ratio&gt;0.01&lt;/min_part_size_ratio&gt;</span><br><span class="line">        &lt;method&gt;lz4&lt;/method&gt;</span><br><span class="line">    &lt;/<span class="keyword">case</span>&gt;</span><br><span class="line">&lt;/clickhouse_compression&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>配置用户文件user.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;!-- 读写用户设置  --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;max_memory_usage&gt;10000000000&lt;/max_memory_usage&gt;</span><br><span class="line">            &lt;use_uncompressed_cache&gt;0&lt;/use_uncompressed_cache&gt;</span><br><span class="line">            &lt;load_balancing&gt;random&lt;/load_balancing&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">        &lt;!-- 只写用户设置  --&gt;</span><br><span class="line">        &lt;<span class="built_in">readonly</span>&gt;</span><br><span class="line">            &lt;max_memory_usage&gt;10000000000&lt;/max_memory_usage&gt;</span><br><span class="line">            &lt;use_uncompressed_cache&gt;0&lt;/use_uncompressed_cache&gt;</span><br><span class="line">            &lt;load_balancing&gt;random&lt;/load_balancing&gt;</span><br><span class="line">            &lt;<span class="built_in">readonly</span>&gt;1&lt;/<span class="built_in">readonly</span>&gt;</span><br><span class="line">        &lt;/<span class="built_in">readonly</span>&gt;</span><br><span class="line">    &lt;/profiles&gt;</span><br><span class="line">    &lt;!-- 配额  --&gt;</span><br><span class="line">    &lt;quotas&gt;</span><br><span class="line">        &lt;!-- Name of quota. --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;interval&gt;</span><br><span class="line">                &lt;duration&gt;3600&lt;/duration&gt;</span><br><span class="line">                &lt;queries&gt;0&lt;/queries&gt;</span><br><span class="line">                &lt;errors&gt;0&lt;/errors&gt;</span><br><span class="line">                &lt;result_rows&gt;0&lt;/result_rows&gt;</span><br><span class="line">                &lt;read_rows&gt;0&lt;/read_rows&gt;</span><br><span class="line">                &lt;execution_time&gt;0&lt;/execution_time&gt;</span><br><span class="line">            &lt;/interval&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">    &lt;/quotas&gt;</span><br><span class="line">    &lt;users&gt;</span><br><span class="line">        &lt;!-- 读写用户  --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;password_sha256_hex&gt;967f3bf355dddfabfca1c9f5cab39352b2ec1cd0b05f9e1e6b8f629705fe7d6e&lt;/password_sha256_hex&gt;</span><br><span class="line">            &lt;networks incl=<span class="string">"networks"</span> replace=<span class="string">"replace"</span>&gt;</span><br><span class="line">                &lt;ip&gt;::/0&lt;/ip&gt;</span><br><span class="line">            &lt;/networks&gt;</span><br><span class="line">            &lt;profile&gt;default&lt;/profile&gt;</span><br><span class="line">            &lt;quota&gt;default&lt;/quota&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">    &lt;/users&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>启动clickhouse，由于我们是rpm方式安装的，可以用以下两种方式启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/clickhouse-server start</span><br><span class="line">systemctl start clickhouse-server</span><br></pre></td></tr></table></figure><p>查看集群情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=6lYaUiFi</span><br><span class="line">ck01 :) select * from system.clusters;</span><br><span class="line"></span><br><span class="line">SELECT *</span><br><span class="line">FROM system.clusters</span><br><span class="line"></span><br><span class="line">┌─cluster────────────────┬─shard_num─┬─shard_weight─┬─replica_num─┬─host_name─┬─host_address─┬─port─┬─is_local─┬─user────┬─default_database─┬─errors_count─┬─estimated_recovery_time─┐</span><br><span class="line">│ report_shards_replicas │         1 │            1 │           1 │   ch01    │ 192.168.1.2   │ 9000 │        1 │ default │                  │            0 │                       0 │</span><br><span class="line">│ report_shards_replicas │         2 │            1 │           1 │   ch02    │ 192.168.1.3   │ 9000 │        0 │ default │                  │            0 │                       0 │</span><br><span class="line">└────────────────────────┴───────────┴──────────────┴─────────────┴───────────┴──────────────┴──────┴──────────┴─────────┴──────────────────┴──────────────┴─────────────────────────┘</span><br><span class="line"></span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span>. Elapsed: 0.001 sec. </span><br><span class="line"></span><br><span class="line">ck01 :)</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database ontime;</span><br><span class="line">use ontime;</span><br><span class="line"></span><br><span class="line">CREATE TABLE ontime (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(<span class="string">'/clickhouse/tables/01-01/ontime'</span>,<span class="string">'cluster01-01-1'</span>,FlightDate,(Year, FlightDate),8192); <span class="comment">#cdh01的实例1，分片01，副本1</span></span><br><span class="line">CREATE TABLE ontime (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(<span class="string">'/clickhouse/tables/01-02/ontime'</span>,<span class="string">'cluster01-01-2'</span>,FlightDate,(Year, FlightDate),8192); <span class="comment">#cdh01的实例2，分片01，副本2</span></span><br><span class="line">CREATE TABLE ontime_all (FlightDate Date,Year UInt16) ENGINE= Distributed(perftest_3shards_2replicas, ontime, ontime, rand());  <span class="comment">#每个实例都执行</span></span><br></pre></td></tr></table></figure><p>当我们从某个节点的_all表插入相应数据，然后ch01,02的数据都是相等的，如果不相等请查看对应日志文件错误，类似以下错误可以通过重启zk再重启clickhouse解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.displayText() = DB::Exception: No interserver IO endpoint named DataPartsExchange:/clickhouse/tables/01-01/ontime</span><br></pre></td></tr></table></figure><p>遇到问题补充：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error&gt; default.my_table (StorageReplicatedMergeTree): DB::StorageReplicatedMergeTree::queueTask()::&lt;lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&amp;)&gt;: Poco::Exception. Code: 1000, e.code() = 0, e.displayText() = Host not found: clickhouse-01-0.clickhouses.default.svc.cluster.local</span><br></pre></td></tr></table></figure><p>只需要看主机名，并设置即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostname -f </span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname ****</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引入一个问题：什么是Clickhouse？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>redis-6.0部署</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-6-0-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-6-0-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2020-05-15T07:56:35.000Z</published>
    <updated>2020-05-20T13:28:29.169Z</updated>
    
    <content type="html"><![CDATA[<p>1、redis简介，这边省略，若有需要直接查看上一篇redis哨兵配置</p><a id="more"></a><p>2、redis6.0更新最大特性：Redis 6.0将在今年年底发布，其中引入的最重大的改变就是多线程IO<br>下面进入正题，安装部署流程<br>#安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install wget nc telnet gcc gcc-c++ autoconf cmake bison libevent libevent-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel libcurl libcurl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers libpcap libpcap-devel libtool iptables iptables-services rsync file perl perl-DBD-MySQL perl-devel sysstat mailx ntpdate vim jwhois <span class="built_in">bind</span>-utils git ipset ipset-service tcpdump iftop inotify-tools gcc-g77 vsftpd subversion strace java python-pip net-tools mtr gettext gettext-devel</span><br></pre></td></tr></table></figure><p>#由于redis6.0需要安装gcc_9.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install centos-release-scl</span><br><span class="line">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-9 bash</span><br></pre></td></tr></table></figure><p>#若不更新gcc会提示以下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.c:xxxx:xx: error: ‘xxxxxxxx’ has no member named ‘xxxxx’</span><br></pre></td></tr></table></figure><p>#添加系统变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"source /opt/rh/devtoolset-9/enable"</span> &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><p>#redis-6.0部署脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_redis</span></span> () &#123;</span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        <span class="keyword">if</span> [ ! -f <span class="string">" redis-6.0.1.tar.gz"</span> ]; <span class="keyword">then</span></span><br><span class="line">           wget http://download.redis.io/releases/redis-6.0.1.tar.gz</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        tar -zxvf /usr/<span class="built_in">local</span>/src/redis-6.0.1.tar.gz</span><br><span class="line">        <span class="built_in">cd</span> redis-6.0.1</span><br><span class="line">        make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br><span class="line">        mkdir -p /usr/<span class="built_in">local</span>/redis/&#123;etc,var&#125;</span><br><span class="line">        rsync -avz redis.conf  /usr/<span class="built_in">local</span>/redis/etc/</span><br><span class="line">        sed -i <span class="string">"s@logfile.*@logfile /usr/local/redis/var/redis.log@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">"s@^dir.*@dir /usr/local/redis/var@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">'s/daemonize no/daemonize yes/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">        sed -i <span class="string">'s/^# bind 127.0.0.1/bind 127.0.0.1/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_redis</span><br></pre></td></tr></table></figure><p>启动redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/ &amp;&amp; ./redis-server ../etc/redis.conf</span><br></pre></td></tr></table></figure><p>查看版本是否为6.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis &amp;&amp; ./redis-server -v</span><br><span class="line">Redis server v=6.0.1 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=0</span><br></pre></td></tr></table></figure><p>redis 命令参考见官网：<a href="https://redis.io/commands" target="_blank" rel="noopener">https://redis.io/commands</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、redis简介，这边省略，若有需要直接查看上一篇redis哨兵配置&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>redis-主从-哨兵配置</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-%E4%B8%BB%E4%BB%8E-%E5%93%A8%E5%85%B5/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-%E4%B8%BB%E4%BB%8E-%E5%93%A8%E5%85%B5/</id>
    <published>2020-05-15T03:04:16.000Z</published>
    <updated>2020-05-20T13:28:07.951Z</updated>
    
    <content type="html"><![CDATA[<p>1、1 Redis官网简介</p><a id="more"></a><p>Redis是一个开源（BSD许可），内存存储的数据结构服务器，可用作数据库，高速缓存和消息队列代理。它支持字符串、哈希表、列表、集合、有序集合，位图，hyperloglogs等数据类型。内置复制、Lua脚本、LRU收回、事务以及不同级别磁盘持久化功能，同时通过Redis Sentinel提供高可用，通过Redis Cluster提供自动分区。官网链接：<a href="https://www.redis.net.cn/" target="_blank" rel="noopener">https://www.redis.net.cn/</a><br>1、2 Redis作用<br>相信redis这个名称大家都不陌生，为什么？<br>因为redis可以用来做中间插件缓存</p><p>1、3 Redis的优、缺点<br>性能极高 – Redis能支持超过 100K+ 每秒的读写频率。<br>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。<br>原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。<br>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p><p>Redis的缺点<br>是数据库容量受到物理内存的限制,不能用作海量数据的高性能读写,因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。</p><p>总结： Redis受限于特定的场景，专注于特定的领域之下，速度相当之快，目前还未找到能替代使用产品。</p><p>前期准备，安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install wget nc telnet gcc gcc-c++ autoconf cmake bison libevent libevent-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel libcurl libcurl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers libpcap libpcap-devel libtool iptables iptables-services rsync file perl perl-DBD-MySQL perl-devel sysstat mailx ntpdate vim jwhois <span class="built_in">bind</span>-utils git ipset ipset-service tcpdump iftop inotify-tools gcc-g77 vsftpd subversion strace java python-pip net-tools mtr gettext gettext-devel</span><br></pre></td></tr></table></figure><p>1、4 架构为单机模式：一主多从多哨兵</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 redis-master redis(6379)、sentnel(26379)</span><br><span class="line">127.0.0.1 redis-slave  redis(6380)、sentnel(26380)</span><br><span class="line">127.0.0.1 redis-slave  redis(6381)、sentnel(26381)</span><br></pre></td></tr></table></figure><p>1、5 Redis下载及安装（脚本形式,只要装一次，然后直接复制配置文件进行修改，多机则都运行一次安装脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim redis_install.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_redis</span></span> () &#123;</span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        <span class="keyword">if</span> [ ! -f <span class="string">" redis-4.0.1.tar.gz"</span> ]; <span class="keyword">then</span></span><br><span class="line">           wget http://download.redis.io/releases/redis-5.0.4.tar.gz</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        tar -zxvf /usr/<span class="built_in">local</span>/src/redis-5.0.4.tar.gz</span><br><span class="line">        <span class="built_in">cd</span> redis-5.0.4</span><br><span class="line">        make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br><span class="line">        mkdir -p /usr/<span class="built_in">local</span>/redis/&#123;etc,var&#125;</span><br><span class="line">        rsync -avz redis.conf  /usr/<span class="built_in">local</span>/redis/etc/</span><br><span class="line">        sed -i <span class="string">"s@logfile.*@logfile /usr/local/redis/var/redis.log@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">"s@^dir.*@dir /usr/local/redis/var@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">'s/daemonize no/daemonize yes/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">        sed -i <span class="string">'s/^# bind 127.0.0.1/bind 127.0.0.1/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_redis</span><br></pre></td></tr></table></figure><p>1、6 复制配置文件进行对应修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/etc</span><br><span class="line">sed -i <span class="string">'/^#/d;/^$/d'</span> redis.conf</span><br><span class="line">mv redis.conf redis-6379.conf</span><br><span class="line">cp redis-6379.conf redis-6380.conf</span><br><span class="line">cp redis-6379.conf redis-6381.conf</span><br></pre></td></tr></table></figure><p>为了好标记，这里以·开头为修改部分，下面直接粘贴三个配置文件<br>redis-6379.comf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line"><span class="comment"># Generated by CONFIG REWRITE</span></span><br></pre></td></tr></table></figure><p>redis-6380.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6380</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">·appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line">·slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><p>redis-6381.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">·port 6381</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">·appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line">·slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><p>1、7 上面为redis的配置，下面配置三个哨兵（sentinel）,和上面同理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/data/sentinel</span><br></pre></td></tr></table></figure><p>sentinel-6379.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26379</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6379.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6379 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>sentinel-6380.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26380</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6380.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6380 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>sentinel-6381.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26381</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6381.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6381 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>1、8 配置文件现在已经配置完，下面启动服务<br>cd /usr/local/redis/bin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./redis-server ../etc/redis-6379.conf</span><br><span class="line">./redis-server ../etc/redis-6380.conf</span><br><span class="line">./redis-server ../etc/redis-6381.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6379.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6380.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6381.conf</span><br></pre></td></tr></table></figure><p>netstat -ntlp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_16_2_centos bin]<span class="comment"># netstat -ntlp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      19533/./redis-serve </span><br><span class="line">tcp        0      0 0.0.0.0:26379           0.0.0.0:*               LISTEN      18205/./redis-senti </span><br><span class="line">tcp        0      0 0.0.0.0:26380           0.0.0.0:*               LISTEN      18211/./redis-senti </span><br><span class="line">tcp        0      0 127.0.0.1:6380          0.0.0.0:*               LISTEN      17831/./redis-serve </span><br><span class="line">tcp        0      0 127.0.0.1:6381          0.0.0.0:*               LISTEN      2681/./redis-server </span><br><span class="line">tcp        0      0 0.0.0.0:26381           0.0.0.0:*               LISTEN      18227/./redis-senti </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1386/sshd           </span><br><span class="line">tcp6       0      0 :::26379                :::*                    LISTEN      18205/./redis-senti </span><br><span class="line">tcp6       0      0 :::26380                :::*                    LISTEN      18211/./redis-senti </span><br><span class="line">tcp6       0      0 :::26381                :::*                    LISTEN      18227/./redis-senti</span><br></pre></td></tr></table></figure><p>1、9 测试，查看自身为什么身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 127.0.0.1 -p 6379 INFO|grep role</span><br><span class="line">role:master</span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6380 INFO|grep role</span><br><span class="line">role:slave</span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6381 INFO|grep role</span><br><span class="line">role:slave</span><br></pre></td></tr></table></figure><p>1、10 登陆到master进行写入数据，看slave是否有同步(分别在三个介面操作，方便分别),因我这边已经测试主从切换，master现在为6380</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 127.0.0.1 -p 6379 </span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6380 </span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6381</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、1 Redis官网简介&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>docker-ce-安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/docker-ce-%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/docker-ce-%E5%AE%89%E8%A3%85/</id>
    <published>2020-05-15T02:59:17.000Z</published>
    <updated>2020-06-11T07:56:53.770Z</updated>
    
    <content type="html"><![CDATA[<p>1、卸载docker旧版本相关<br> <a id="more"></a><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker docker-client  docker-client-latest docker-common docker-latest \</span><br><span class="line">docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux  docker-engine</span><br></pre></td></tr></table></figure><br>2、安装新版docker源<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils            device-mapper-persistent-data            lvm2</span><br><span class="line">yum-config-manager     --add-repo     https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><br> 3、直接yum安装docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><br> 启动docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><br> 配置下载镜像加速，为了避免硬盘被log占用，导致空间不足，则加上log配置，编辑<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> vim /etc/docker/daemon.json</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://l6f3pp3g.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>:<span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>:&#123; <span class="string">"max-size"</span> :<span class="string">"100m"</span>,<span class="string">"max-file"</span>:<span class="string">"10"</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 刷新配置重启docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、卸载docker旧版本相关&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
</feed>
