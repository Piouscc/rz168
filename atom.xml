<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lucky、boy</title>
  
  
  <link href="/rz168.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/Piouscc/rz168.io.git/"/>
  <updated>2020-07-23T13:03:24.513Z</updated>
  <id>https://github.com/Piouscc/rz168.io.git/</id>
  
  <author>
    <name>Lucky、boy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB-入门篇</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/23/MongoDB-%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/23/MongoDB-%E5%85%A5%E9%97%A8%E7%AF%87/</id>
    <published>2020-07-23T12:44:14.000Z</published>
    <updated>2020-07-23T13:03:24.513Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB-入门篇<br> <a id="more"></a><br>由于最近得出空闲时间，整理一下笔记……</p><p>1、Mongodb简介<br>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的分布式文件存储的开源数据库系统。</p><p>2、Mongodb安装<br>由于把安装步骤写成了shell脚本，这就直接略过，若有需要的直接访问下面的链接进行了解，安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、启动与关闭Mongodb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /usr/<span class="built_in">local</span>/mongodb-4.2.8/bin/mongodb.conf</span><br><span class="line">mongod --shutdown --dbpath=/data/mongodb/Data/  <span class="comment">#这里指定目录的原因是因为配置文件里有写，所以指定会比较好</span></span><br></pre></td></tr></table></figure><p>4、当我们启动了MongoDB,尝试链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span><br><span class="line">参数介绍：</span><br><span class="line">    mongodb:// 这是固定的格式，必须要指定。</span><br><span class="line">    username:password@ 可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登陆这个数据库</span><br><span class="line">    host1 必须的指定至少一个host, host1 是这个URI唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。</span><br><span class="line">    portX 可选的指定端口，如果不填，默认为27017</span><br><span class="line">    /database 如果指定username:password@，连接并验证登陆指定数据库。若不指定，默认打开 <span class="built_in">test</span> 数据库。</span><br><span class="line">    ?options 是连接选项。如果不使用/database，则前面需要加上/。所有连接选项都是键值对name=value，键值对之间通过&amp;或;（分号）隔开</span><br></pre></td></tr></table></figure><p>5、我们知道数据都是很重要的，接下来我们就会说到备份与恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份</span></span><br><span class="line">mongodump -h dbhost -d dbname -o bak_path</span><br><span class="line"></span><br><span class="line">    -h:表示登陆ip，如：127.0.0.1，加端口的方式为：127.0.0.1:27017</span><br><span class="line">    -d:需要备份的数据库</span><br><span class="line">    -o:备份的路径</span><br><span class="line"></span><br><span class="line">若不指定数据库，则命令如下：</span><br><span class="line">mongodump -h dbhost -o bak_path</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复</span></span><br><span class="line">mongodb恢复数据也比较简单，命令如下：</span><br><span class="line"><span class="comment">#指定恢复某个库</span></span><br><span class="line">mongorestore -h &lt;hostname&gt;&lt;:port&gt; -d dbname &lt;path&gt;</span><br><span class="line"><span class="comment">#恢复所有库</span></span><br><span class="line">mongorestore -h &lt;hostname&gt;&lt;:port&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure><p>6、对于一名运维同事来说，监控也是很重要的，因此MongoDB也自带了一定的监控</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">MongoDB中提供了mongostat 和 mongotop 两个命令来监控MongoDB的运行情况</span><br><span class="line">直接进行安装目录运行相应命令即可</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mongodb…/bin</span><br><span class="line">mongotop</span><br><span class="line">mongostat</span><br><span class="line">其中还能通此命令（mongotop --locks）得出每个数据库的锁的情况</span><br><span class="line">图略</span><br><span class="line">字段解释如下：</span><br><span class="line">    ns：</span><br><span class="line">        包含数据库命名空间，后者结合了数据库名称和集合。</span><br><span class="line">    db：</span><br><span class="line">        包含数据库的名称。名为 . 的数据库针对全局锁定，而非特定数据库。</span><br><span class="line">    total：</span><br><span class="line">        mongod花费的时间工作在这个命名空间提供总额。</span><br><span class="line">    <span class="built_in">read</span>：</span><br><span class="line">        提供了大量的时间，这mongod花费在执行读操作，在此命名空间。</span><br><span class="line">    write：</span><br><span class="line">        提供这个命名空间进行写操作，这mongod花了大量的时间。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB-入门篇&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-4.2.8安装脚本</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/23/MongoDB-install/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/23/MongoDB-install/</id>
    <published>2020-07-23T12:38:56.000Z</published>
    <updated>2020-07-24T08:25:00.624Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB-4.2.8安装脚本<br> <a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#install mongodb-4.2.8</span></span><br><span class="line"></span><br><span class="line">Download_PATH=/usr/<span class="built_in">local</span>/src/</span><br><span class="line">Version=4.2.8</span><br><span class="line">Mongodb_PATH=/usr/<span class="built_in">local</span>/mongodb-<span class="variable">$Version</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖软件</span></span><br><span class="line">yum install libcurl openssl libcurl-devel openssl-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载mongodb压缩包</span></span><br><span class="line">wget -O <span class="variable">$Download_PATH</span>/mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz  https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"重新下载mongodb压缩包"</span></span><br><span class="line">    wget -O <span class="variable">$Download_PATH</span>/mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz  https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"下载mongodb压缩包失败，请更换下载源~"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$Download_PATH</span></span><br><span class="line">    tar -xf mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz &amp;&amp; mv mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span> ../mongodb-<span class="variable">$Version</span></span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"解压mongodb压缩包失败，重新解压"</span></span><br><span class="line">        tar -xf mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span>.tgz &amp;&amp; mv mongodb-linux-x86_64-rhel70-<span class="variable">$Version</span> ../mongodb-<span class="variable">$Version</span></span><br><span class="line">        <span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"解压mongodb压缩包失败，请手动执行~"</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="comment">#设置mongoDB环境变量</span></span><br><span class="line">    <span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/mongodb-<span class="variable">$Version</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">    <span class="built_in">source</span> /etc/profile</span><br><span class="line">    mkdir -p /data/mongodb/Data</span><br><span class="line">    mkdir -p /data/mongodb/Log</span><br><span class="line">    touch /data/mongodb/Log/mongodb.log</span><br><span class="line"></span><br><span class="line">    <span class="comment">#启动mongoDB服务 </span></span><br><span class="line">    mongod -f <span class="variable">$Mongodb_PATH</span>/bin/mongodb.conf  --dbpath=/data/mongodb/Data/</span><br><span class="line">    <span class="comment">#关闭mongoDB服务</span></span><br><span class="line">    mongod --shutdown --dbpath=/data/mongodb/Data/</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>配置文件需要自己复制到$Mongodb_PATH下新建一个mongodb.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">vi  <span class="variable">$Mongodb_PATH</span>/bin/mongodb.conf</span><br><span class="line">        <span class="comment"># 数据文件位置</span></span><br><span class="line">        dbpath = /data/mongodb/Data</span><br><span class="line">        <span class="comment"># 日志文件位置</span></span><br><span class="line">        logpath = /data/mongodb/Log/mongodb.log</span><br><span class="line">        <span class="comment"># 以追加方式写入日志，true为追加。false是覆盖</span></span><br><span class="line">        logappend = <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 日志输出都发送到主机的syslog系统，而不是标准输出到logpath指定日志文件。syslog和logpath不能一起用，会报错：Cant use both a logpath and syslog</span></span><br><span class="line">        <span class="comment"># syslog = true</span></span><br><span class="line">        <span class="comment">#绑定地址。默认127.0.0.1，只能通过本地连接。进程绑定和监听来自这个地址上的应用连接。要是需要给其他服务器连接，则需要注释掉这个或则 把IP改成本机地址，</span></span><br><span class="line">        <span class="comment"># 如192.168.200.201[其他服务器用 mongo --host=192.168.200.201 连接] ，可以用一个逗号分隔的列表绑定多个IP地址。</span></span><br><span class="line">        <span class="comment"># bind_ip = 127.0.0.1</span></span><br><span class="line">        <span class="comment"># 默认端口27017</span></span><br><span class="line">        port = 27017</span><br><span class="line">        <span class="comment"># 是否后台运行，设置为true 启动 进程在后台运行的守护进程模式。默认false。</span></span><br><span class="line">        fork = <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 安静模式。这个选项可以过滤掉一些无用的日志信息，若需要调试使用请设置为false</span></span><br><span class="line">        quiet = <span class="literal">false</span></span><br><span class="line">        <span class="comment"># 启用日志文件，默认启用</span></span><br><span class="line">        journal = <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 刷写提交机制，默认是30ms或则100ms。较低的值，会更消耗磁盘的性能。此选项接受2和300毫秒之间的值：</span></span><br><span class="line">        <span class="comment"># 如果单块设备提供日志和数据文件，默认的日记提交时间间隔为100毫秒。如果不同的块设备提供的日志和数据文件，默认的日记提交的时间间隔为30毫秒。</span></span><br><span class="line">        <span class="comment"># journalCommitInterval=100</span></span><br><span class="line">        <span class="comment"># 启用定期记录CPU利用率和 I/O 等待，设置为true会强制mongodb每4s报告cpu利用率和io等待，把日志信息写到标准输出或日志文件。</span></span><br><span class="line">        <span class="comment"># 默认为false。开启日志会出现：1.Mon Jun 10 10:21:42.241 [snapshotthread] cpu: elapsed:4000 writelock: 0%</span></span><br><span class="line">        <span class="comment"># cpu = true</span></span><br><span class="line">        <span class="comment"># 用户认证，默认false。不需要认证。当设置为true时候，进入数据库需要auth验证，当数据库里没有用户，则不需要验证也可以操作。直到创建了第一个用户，之后操作都需要验证。</span></span><br><span class="line">        <span class="comment"># noauth = true</span></span><br><span class="line">        <span class="comment"># auth = true</span></span><br><span class="line">        <span class="comment"># 详细记录输出</span></span><br><span class="line">        <span class="comment"># verbose = true</span></span><br><span class="line">        <span class="comment"># 设置oplog记录等级 0=off (default) 1=W 2=R 3=both 7=W+some reads</span></span><br><span class="line">        <span class="comment"># diaglog = 0</span></span><br><span class="line">        <span class="comment"># 动态调试项</span></span><br><span class="line">        <span class="comment"># nocursors = true</span></span><br><span class="line">        <span class="comment"># 忽略查询提示</span></span><br><span class="line">        <span class="comment"># nohints = true</span></span><br><span class="line">        <span class="comment"># 指定的复制操作日志（OPLOG）的最大大小。mongod创建一个OPLOG的大小基于最大可用空间量。对于64位系统，OPLOG通常是5％的可用磁盘空间。</span></span><br><span class="line">        <span class="comment"># 一旦mongod第一次创建OPLOG，改变oplogSize将不会影响OPLOG的大小。</span></span><br><span class="line">        <span class="comment"># oplogSize = 1024</span></span><br><span class="line">        <span class="comment"># 指定存储身份验证信息的密钥文件的路径，默认缺省</span></span><br><span class="line">        <span class="comment"># keyFile = /path/to/keyfile</span></span><br><span class="line">        <span class="comment"># 最大连接数。默认值：取决于系统（即的ulimit和文件描述符）限制。MongoDB中不会限制其自身的连接。当设置大于系统的限制，则无效，以系统限制为准。这对于客户端创建很多“表”，</span></span><br><span class="line">        <span class="comment"># 允许连接超时而不关闭“表”的时候很有用。设置该值的高于连接池和总连接数的大小，以防止尖峰时 候的连接。注意：不能设置该值大于20000。</span></span><br><span class="line">        <span class="comment"># maxConns = 100</span></span><br><span class="line">        <span class="comment"># 强制验证客户端请求。2.4的默认设置为objcheck成为true，在早期版本objcheck默认为false。因为它强制验证客户端请求，确保客户端绝不插入无效文件到数据库中。</span></span><br><span class="line">        <span class="comment"># 对于嵌套文档的对象，会有一点性能影响。设置noobjcheck 关闭。</span></span><br><span class="line">        <span class="comment"># objcheck = true</span></span><br><span class="line">        <span class="comment"># 同上，默认false</span></span><br><span class="line">        <span class="comment"># noobjcheck = false</span></span><br><span class="line">        <span class="comment"># 进程ID，没有指定则启动时候就没有PID文件。默认缺省。</span></span><br><span class="line">        <span class="comment"># pidfilepath = /var/run/mongo.pid</span></span><br><span class="line">        <span class="comment"># 套接字文件，默认为false，有生成socket文件。当设置为true时，不会生成socket文件</span></span><br><span class="line">        <span class="comment"># nounixsocket = false</span></span><br><span class="line">        <span class="comment"># 套接字文件路径，默认/tmp</span></span><br><span class="line">        <span class="comment"># unixSocketPrefix = /tmp</span></span><br><span class="line">        <span class="comment"># 设置为true，修改数据目录存储模式，每个数据库的文件存储在DBPATH指定目录的不同的文件夹中。使用此选项，可以配置的MongoDB将数据存储在不同的磁盘设备上，以提高写入吞吐量或磁盘容量。默认为false。</span></span><br><span class="line">        <span class="comment"># 注意：要是在运行一段时间的数据库中，开启该参数，会导致原始的数据都会消失（注释参数则会回来）。因为数据目录都不同了，除非迁移现有的数据文件到directoryperdb产生的数据库目录中</span></span><br><span class="line">        <span class="comment"># directoryperdb = false</span></span><br><span class="line">        <span class="comment"># 是否支持ipv6，默认false</span></span><br><span class="line">        <span class="comment"># ipv6 = false</span></span><br><span class="line">        <span class="comment"># 是否允许JSONP访问通过一个HTTP接口，默认false。</span></span><br><span class="line">        <span class="comment"># jsonp = false</span></span><br><span class="line">        <span class="comment"># 是否禁止http接口，即28017 端口开启的服务。默认false，支持</span></span><br><span class="line">        <span class="comment"># nohttpinterface = false</span></span><br><span class="line">        <span class="comment"># 预分配方式。默认false：使用预分配方式来保证写入性能的稳定，预分配在后台进行，并且每个预分配的文件都用0进行填充。这会让MongoDB始终保持额外的空间和空余的数据文件，</span></span><br><span class="line">        <span class="comment"># 从而避免了数据增长过快而带来的分配磁盘空间引起的阻塞。设置noprealloc= true来禁用预分配的数据文件，会缩短启动时间，但在正常操作过程中，可能会导致性能显著下降。</span></span><br><span class="line">        <span class="comment"># noprealloc = false</span></span><br><span class="line">        <span class="comment"># 是否禁止脚本引擎。默认是false：不禁止。ture：禁止。</span></span><br><span class="line">        <span class="comment"># 要是设置成true：运行一些脚本的时候会出现：JavaScript execution failed: group command failed: &#123; "ok" : 0, "errmsg" : "server-side JavaScript execution is disabled" &#125;</span></span><br><span class="line">        <span class="comment"># noscripting = false</span></span><br><span class="line">        <span class="comment"># 是否禁止表扫描操作。默认false：不禁止，ture：禁止</span></span><br><span class="line">        <span class="comment"># 禁止要是执行表扫描会出现：error: &#123; "$err" : "table scans not allowed:test.emp", "code" : 10111 &#125;</span></span><br><span class="line">        <span class="comment"># notablescan = false</span></span><br><span class="line">        <span class="comment"># 命名空间的文件（即NS）的默认大小，默认16M，最大2G。所有新创建的默认大小命名空间的文件（即NS）。</span></span><br><span class="line">        <span class="comment"># 此选项不会影响现有的命名空间的文件的大小。默认值是16M字节，最大大小为2 GB。让小数据库不让浪费太多的磁盘空间，同时让大数据在磁盘上有连续的空间。</span></span><br><span class="line">        <span class="comment"># nssize = 16</span></span><br><span class="line">        <span class="comment"># 数据库分析等级设置。记录一些操作性能到标准输出或则指定的logpath的日志文件中，默认0:关闭。</span></span><br><span class="line">        <span class="comment"># 数据库分析可以影响数据库的性能，因为分析器必须记录和处理所有的数据库操作。所以在需要的时候用动态修改就可以了</span></span><br><span class="line">        <span class="comment"># 0：关，无分析。 1：开，仅包括慢操作。 2：开，包括所有操作。</span></span><br><span class="line">        <span class="comment"># 控制 Profiling  的开关和级别：2种</span></span><br><span class="line">        <span class="comment"># 第一种是直接在启动参数里直接进行设置或则启动MongoDB时加上–profile=级别，其信息保存在 生成的system.profile 中。</span></span><br><span class="line">        <span class="comment"># profile = 0</span></span><br><span class="line">        <span class="comment"># 记录profile分析的慢查询的时间，默认是100毫秒</span></span><br><span class="line">        <span class="comment"># slowms = 100</span></span><br><span class="line">        <span class="comment"># 配额，默认false。是否开启配置每个数据库的最多文件数的限制。当为true则用quotaFiles来配置最多文件的数量。</span></span><br><span class="line">        <span class="comment"># quota = false</span></span><br><span class="line">        <span class="comment"># 配额数量。每个数据库的数据文件数量的限制。此选项需要quota为true。默认为8</span></span><br><span class="line">        <span class="comment"># quotaFiles = 8</span></span><br><span class="line">        <span class="comment"># 使一个简单的 REST API，默认false，设置为true。</span></span><br><span class="line">        <span class="comment"># rest = true</span></span><br><span class="line">        <span class="comment"># 修复数据库操作，默认是false。设置为true时，启动后修复所有数据库，设置这个选项最好在命令行上，而不是在配置文件或控制脚本。</span></span><br><span class="line">        <span class="comment"># repair = true</span></span><br><span class="line">        <span class="comment"># 修复路径，默认是在dbpath路径下的_tmp 目录。</span></span><br><span class="line">        <span class="comment"># repairpath</span></span><br><span class="line">        <span class="comment"># 是否使用较小的默认文件。默认为false，不使用。设置为true，使用较小的默认数据文件大小。smallfiles减少数据文件的初始大小，并限制他们到512M，</span></span><br><span class="line">        <span class="comment"># 也减少了日志文件的大小，并限制他们到128M。如果数据库很大，各持有少量的数据，会导致mongodb创建很多文件，会影响性能。</span></span><br><span class="line">        <span class="comment"># smallfiles = true</span></span><br><span class="line">        <span class="comment"># 刷写数据到日志的频率，通过fsync操作数据。默认60秒。</span></span><br><span class="line">        <span class="comment"># 警告：如果设置为0，SYNCDELAY 不会同步到磁盘的内存映射文件。在生产系统上，不要设置这个值。</span></span><br><span class="line">        <span class="comment"># syncdelay = 60</span></span><br><span class="line">        <span class="comment"># 系统信息，默认false。设置为true，mongod会诊断系统有关的页面大小，数量的物理页面，可用物理??页面的数量输出到标准输出。</span></span><br><span class="line">        <span class="comment"># 当开启sysinfo参数的时候，只会打印信息，不会启动mongodb的程序。所以要关闭该参数，才能开启mongodb。</span></span><br><span class="line">        <span class="comment"># sysinfo = false</span></span><br><span class="line">        <span class="comment"># 升级。默认为false。当设置为true，指定DBPATH，升级磁盘上的数据格式的文件到最新版本。会影响数据库操作，更新元数据。大部分情况下，不需要设置该值。</span></span><br><span class="line">        <span class="comment"># upgrade = false</span></span><br><span class="line">        <span class="comment"># 是否使用内部诊断。默认false。</span></span><br><span class="line">        <span class="comment"># traceExceptions = false</span></span><br><span class="line">        <span class="comment"># 2.4的新参数，指定启动选项配置。想设置多个选项则用一个setParameter选项指定，可以setParameter的参数请见这里。</span></span><br><span class="line">        <span class="comment"># 声明setParameter设置在这个文件中，使用下面的格式：setParameter = &lt;parameter&gt;=&lt;value&gt;</span></span><br><span class="line">        <span class="comment"># 例如： setParameter = syncdelay= 55,notablescan = true,journalCommitInterval = 50,traceExceptions = true</span></span><br><span class="line">        <span class="comment"># setParameter = </span></span><br><span class="line">        <span class="comment"># 使用此设置来配置复制副本集。指定一个副本集名称作为参数，所有主机都必须有相同的名称作为同一个副本集。</span></span><br><span class="line">        <span class="comment"># replSet = </span></span><br><span class="line">        <span class="comment"># 默认为false。在副本集下，设置为true，从一个dbpath里启用从库复制服务，该dbpath的数据库是主库的快照，可用于快速启用同步，</span></span><br><span class="line">        <span class="comment"># 否则的mongod将尝试执行初始同步。注意：如果数据不完全同步，mongod指定fastsync开启，secondary或slave与主永久不同步，这可能会导致显着的一致性问题。</span></span><br><span class="line">        <span class="comment"># fastsync = </span></span><br><span class="line">        <span class="comment"># 2.2版本出现的新参数，默认是all。可以设置的值有：all, none, and _id_only。只能在副本集（replSet）中使用。默认情况下，</span></span><br><span class="line">        <span class="comment"># secondary副本集的成员将加载所有索引到内存中（从OPLOG之前的操作有关的）。您可以修改此行为，使secondary只会加载_id索引。指定id或none，防止mongod的任何索引加载到内存。</span></span><br><span class="line">        <span class="comment"># replIndexPrefetch = </span></span><br><span class="line">        <span class="comment"># 主从复制的相关设置</span></span><br><span class="line">        <span class="comment"># master：默认为false，当设置为true，则配置当前实例作为主实例。</span></span><br><span class="line">        <span class="comment"># master = false</span></span><br><span class="line">        <span class="comment"># slave：默认为false，当设置为true，则配置当前实例作为从实例。</span></span><br><span class="line">        <span class="comment"># slave = true</span></span><br><span class="line">        <span class="comment"># 设置从库同步主库的延迟时间，用于从设置，默认为0。</span></span><br><span class="line">        <span class="comment"># slavedelay = 0</span></span><br><span class="line">        <span class="comment"># 是否自动重新同步.默认为false，用于从设置。设置为true，如果落后主超过10秒，会强制从自动重新同步。</span></span><br><span class="line">        <span class="comment"># 如果oplogSize太小，此设置可能有问题。如果OPLOG大小不足以存储主的变化状态和从的状态变化之间的差异，这种情况下强制重新同步是不必要的。</span></span><br><span class="line">        <span class="comment"># 当设置autoresync选项设置为false，10分钟内从不会进行大于1次的自动重新同步。</span></span><br><span class="line">        <span class="comment"># autoresync = false</span></span><br><span class="line">        <span class="comment"># 默认为空，格式为：&lt;host&gt;&lt;:port&gt;。用于从实例的复制：设置从的时候指定该选项会让从复制指定主的实例</span></span><br><span class="line">        <span class="comment"># source = 127.0.0.1:30001</span></span><br><span class="line">        <span class="comment"># 默认为空，用于从选项，指定一个数据库进行复制。</span></span><br><span class="line">        <span class="comment"># only =</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB-4.2.8安装脚本&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="shell" scheme="https://github.com/Piouscc/rz168.io.git/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>showdoc-安装篇</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/</id>
    <published>2020-07-14T09:17:37.000Z</published>
    <updated>2020-07-15T03:14:45.665Z</updated>
    
    <content type="html"><![CDATA[<p>Showdoc-技术文档安装，备份，迁移</p><a id="more"></a><p>记录一下Showdoc的安装迁移部署，注：showdoc使用的是Markdown语法~<br>1、Showdoc是何物？<br>引用官网：<br>    每当接手一个他人开发好的模块或者项目，看着那些没有写注释的代码，我们都无比抓狂。文档呢？！文档呢？！<br>    Show me the doc ！！</p><p>2、Showdoc安装方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker安装</span><br><span class="line">php安装，注这里的php版本需要5.3及以上，同时需要开启php-gd php-sqlite扩展</span><br></pre></td></tr></table></figure><p>3、这里通过php安装方式，php、nginx（apache）安装（略）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/star7th/showdoc/archive/v2.8.3.zip</span><br><span class="line">unzip v2.8.3.zip</span><br><span class="line">mv showdoc-2.8.3/* /var/www/html</span><br><span class="line">chown -R www.www /var/www/html</span><br></pre></td></tr></table></figure><p>4、把解压的文件复制到apache或nginx的root目录下，nginx配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/showdoc.conf</span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  127.0.0.1;</span><br><span class="line">        root         /var/www/html;</span><br><span class="line">        index index.php index.html;</span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">            root           /var/www/html;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ /\.ht &#123;</span><br><span class="line">            deny  all;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>5、需要在nginx.conf内引用些配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include showdoc.conf;</span><br></pre></td></tr></table></figure><p>6、然后打开浏览器访问<a href="http://localhouse/install进入安装界面,然后点击安装" target="_blank" rel="noopener">http://localhouse/install进入安装界面,然后点击安装</a></p><img src="/rz168.io/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/showdoc-01.png" class title="This is an jenkins image"><p>7、安装成功的界面</p><img src="/rz168.io/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/showdoc-02.png" class title="This is an jenkins image"><p>8、登陆showdoc，默认账号为showdoc/123456</p><img src="/rz168.io/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/showdoc-03.png" class title="This is an jenkins image"><p>9、登陆成功的界面如下</p><img src="/rz168.io/2020/07/14/showdoc-%E5%AE%89%E8%A3%85%E7%AF%87/showdoc-04.png" class title="This is an jenkins image"><p>10、备份，主要把showdoc文件夹下的Public以及Sqlite备份即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">tar -zcf /opt/showdoc.tar.gz Sqlite Public</span><br></pre></td></tr></table></figure><p>11、恢复只要安装好showdoc之后，直接把备份文件复制回原来位置即可，或者docker安装映射目录后替换<br>如果是docker方式安装还需要配置nginx反向代理，因为docker方式安装默认端口为4999，则nginx直接反<br>向代理即可，配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">upstream showdoc &#123;</span><br><span class="line">        server  127.0.0.1:4999 weight=1 max_fails=3  fail_timeout=60;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name showdoc.test.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://showdoc;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        proxy_set_header Connection <span class="string">'upgrade'</span>;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_cache_bypass <span class="variable">$http_upgrade</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Showdoc-技术文档安装，备份，迁移&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>openssh-7.4脚本安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/13/openssh-7-4%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/13/openssh-7-4%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/</id>
    <published>2020-07-13T08:05:59.000Z</published>
    <updated>2020-07-13T08:10:44.259Z</updated>
    
    <content type="html"><![CDATA[<p>openssh-7.4脚本安装</p><a id="more"></a><p>在centos-6.x系统版本下在openssh都是5.3，所以在安装在其它软件或者执行一些命令的时候，<br>都会显示不支持或者其它错误，那么下面就是升级openssh脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">yum -y install gcc gcc-c++ telnet-server* pam-devel zlib-devel openssl openssl-devel</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget http://down.i.my71.com/openssh-7.4p1.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf openssh-7.4p1.tar.gz &amp;&amp; <span class="built_in">cd</span> openssh-7.4p1</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/openssh --sysconfdir=/etc/ssh --with-pam --with-md5-passwords --mandir=/usr/share/man</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">/etc/init.d/sshd stop</span><br><span class="line">\cp -f /usr/<span class="built_in">local</span>/src/openssh-7.4p1/contrib/redhat/sshd.init /etc/init.d/sshd</span><br><span class="line">chmod u+x /etc/init.d/sshd</span><br><span class="line">\cp -f /usr/<span class="built_in">local</span>/openssh/sbin/sshd /usr/sbin/sshd</span><br><span class="line">\cp -f /usr/<span class="built_in">local</span>/openssh/bin/ssh-keygen /usr/bin/ssh-keygen</span><br><span class="line">sed -i <span class="string">'s/GSSAPIAuthentication yes/#GSSAPIAuthentication yes/g'</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">'s/GSSAPICleanupCredentials yes/#GSSAPICleanupCredentials yes/g'</span> /etc/ssh/sshd_config</span><br><span class="line">sed -i <span class="string">'s/UsePAM yes/#UsePAM yes/g'</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;openssh-7.4脚本安装&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="shell" scheme="https://github.com/Piouscc/rz168.io.git/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Docker-compose之Jenkins安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/09/Docker-compose%E4%B9%8BJenkins%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/09/Docker-compose%E4%B9%8BJenkins%E5%AE%89%E8%A3%85/</id>
    <published>2020-07-09T09:43:41.000Z</published>
    <updated>2020-07-10T07:07:44.735Z</updated>
    
    <content type="html"><![CDATA[<p>Docker-compose之Jenkins安装<br> <a id="more"></a><br>1、Jenkins是什么？<br>Jenkins是一款开源 CI&amp;CD 软件，用于自动化各种任务，包括构建、测试和部署软件。<br>Jenkins 支持各种运行方式，可通过系统包、Docker 或者通过一个独立的 Java 程序。<br>详细请访问官网：<a href="https://www.jenkins.io/zh/doc/" target="_blank" rel="noopener">https://www.jenkins.io/zh/doc/</a></p><p>2、安装<br>由于Jenkins的安装方式有很多种，如：Docker、war、apt-get<br>之前介绍过docker-compose的安装，那么我们这里就用docker-compose的方式安装Jenkins</p><p>3、创建映射目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/jenkins     <span class="comment">#此为映射目录</span></span><br><span class="line">mkdir /opt/docker-compose-jenkins                 <span class="comment">#此为docker-compose.yml文件目录</span></span><br></pre></td></tr></table></figure><p>4、编写docker-compose.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3.7'</span></span><br><span class="line">services:</span><br><span class="line">  webjenkins:</span><br><span class="line">    container_name: webjenkins</span><br><span class="line">    image: <span class="string">'jenkins/jenkins:lts'</span></span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">'8080:8080'</span>                                <span class="comment">#此处为映射端口，可以根据个人喜欢而设置</span></span><br><span class="line">      - <span class="string">'50001:50000'</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./jenkins:/var/jenkins_home</span><br><span class="line">      - ./jenkins/docker.sock:/var/run/docker.sock</span><br><span class="line">    network_mode: <span class="string">"dockerfile_jumpserver"</span>          <span class="comment">#此处为容器网络，可以设置为其它的</span></span><br></pre></td></tr></table></figure><p>5、利用docker-compose构建Jenkins</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/docker-compose-jenkins</span><br><span class="line">docker-compose -f docker-compose.yml up -d         <span class="comment">#表示在后台运行，此处需要下载镜像，可能需要等待几分钟</span></span><br><span class="line">docker-compose -f docker-compose.yml down           <span class="comment">#同理进入docker-compose.yml对应目录，关闭对应容器</span></span><br></pre></td></tr></table></figure><p>6、查看容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps                                           <span class="comment">#表示启动的容器</span></span><br><span class="line">docker ps -a                                        <span class="comment">#表示显示全部容器</span></span><br></pre></td></tr></table></figure><p>7、容器启动成功后，可以访问宿主机IP:8080端口进入Jenkins页面，如下</p><img src="/rz168.io/2020/07/09/Docker-compose%E4%B9%8BJenkins%E5%AE%89%E8%A3%85/setup-jenkins-01-page.jpg" class title="This is an jenkins image"><p>8、这时需要一个登陆密码，在docker-compose里有定义映射目录，这里可以直接从映射目录查看,然后设置用户，也可以跳过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /data/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><p>9、解锁jenkins后，在 Customize Jenkins 页面内， 您可以安装任何数量的有用插件作为您初始步骤的一部分。<br>两个选项可以设置:<br>安装建议的插件 - 安装推荐的一组插件，这些插件基于最常见的用例.<br>选择要安装的插件 - 选择安装的插件集。当你第一次访问插件选择页面时，默认选择建议的插件。</p><p>10、安装完成的界面如下：</p><img src="/rz168.io/2020/07/09/Docker-compose%E4%B9%8BJenkins%E5%AE%89%E8%A3%85/setup-jenkins-02-page.png" class title="This is an jenkins image">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker-compose之Jenkins安装&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>修改docker默认存储目录</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/07/02/%E4%BF%AE%E6%94%B9docker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E7%9B%AE%E5%BD%95/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/07/02/%E4%BF%AE%E6%94%B9docker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E7%9B%AE%E5%BD%95/</id>
    <published>2020-07-02T06:30:53.000Z</published>
    <updated>2020-07-02T06:38:36.173Z</updated>
    
    <content type="html"><![CDATA[<p>修改docker默认存储目录</p><a id="more"></a><p>修改原docker存储目录/var/lib/docker<br>1.先停止在运行的容器，停docker服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps | awk <span class="string">'&#123;print $1&#125;'</span> |sed <span class="string">'1d'</span>)</span><br><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><p>2.移动docker原文件到新目录,一定要保留原权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv /var/lib/docker /data/</span><br><span class="line">或者</span><br><span class="line">rsync -a /var/lib/docker /data/</span><br></pre></td></tr></table></figure><p>3.编辑docker配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"graph"</span>:<span class="string">"/data/docker"</span>,</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.重启docker服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure><p>5.启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start $(docker ps -a| awk <span class="string">'&#123;print $1&#125;'</span> |sed <span class="string">'1d'</span>)</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修改docker默认存储目录&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>安装docker-compose</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/06/22/%E5%AE%89%E8%A3%85docker-compose/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/06/22/%E5%AE%89%E8%A3%85docker-compose/</id>
    <published>2020-06-22T09:23:10.000Z</published>
    <updated>2020-06-22T09:27:43.640Z</updated>
    
    <content type="html"><![CDATA[<p>Docker-compose环境安装</p><a id="more"></a><p>###1、docker-compose简介<br>Compose是用于定义和运行多容器Docker应用程序的工具。通过Compose，您可以使用YAML文件来配置应用程序的服务。然后，使用一个命令，就可以从配置中创建并启动所有服务。<br>###2、docker-compose三步过程<br>1.定义应用环境<br>2.定义应用程序服务<br>3.Run docker-compose up and compose启动运行整个应用程序<br>###3、docker-compose安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.26.0/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><p>###4、增加执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo ln -s /usr/<span class="built_in">local</span>/bin/docker-compose /usr/<span class="built_in">local</span>/docker-compose</span><br></pre></td></tr></table></figure><p>###5、查看docker-compose版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># docker-compose --version</span></span><br><span class="line">docker-compose version 1.26.0-rc3, build 46118bc5</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker-compose环境安装&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper-集群搭建</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/06/22/zookeeper-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/06/22/zookeeper-%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2020-06-22T08:09:49.000Z</published>
    <updated>2020-06-22T08:12:43.285Z</updated>
    
    <content type="html"><![CDATA[<p>Zookeeper-集群搭建</p><a id="more"></a><p>服务器信息如下(注：以下信息需要配置在/etc/hosts里面):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.2      ch02    zk01</span><br><span class="line">192.168.1.3      ch03    zk02</span><br><span class="line">192.168.1.4      ch04    zk03</span><br></pre></td></tr></table></figure><p>###1、为什么zookeeper节点数为奇数？<br>容错率<br>　　首先从容错率来说明：（需要保证集群能够有半数进行投票）<br>　　2台服务器，至少2台正常运行才行（2的半数为1，半数以上最少为2），正常运行1台服务器都不允许挂掉，但是相对于 单节点服务器，2台服务器还有两个单点故障，所以直接排除了。<br>　　3台服务器，至少2台正常运行才行（3的半数为1.5，半数以上最少为2），正常运行可以允许1台服务器挂掉<br>　　4台服务器，至少3台正常运行才行（4的半数为2，半数以上最少为3），正常运行可以允许1台服务器挂掉<br>　　5台服务器，至少3台正常运行才行（5的半数为2.5，半数以上最少为3），正常运行可以允许2台服务器挂掉<br>防脑裂<br>    脑裂集群的脑裂通常是发生在节点之间通信不可达的情况下，集群会分裂成不同的小集群，小集群各自选出自己的leader节点，导致原有的集群出现多个leader节点的情况，这就是脑裂。<br>　　3台服务器，投票选举半数为1.5，一台服务裂开，和另外两台服务器无法通行，这时候2台服务器的集群（2票大于半数1.5票），所以可以选举出leader，而 1 台服务器的集群无法选举。<br>　　4台服务器，投票选举半数为2，可以分成 1,3两个集群或者2,2两个集群，对于 1,3集群，3集群可以选举；对于2,2集群，则不能选择，造成没有leader节点。<br>　　5台服务器，投票选举半数为2.5，可以分成1,4两个集群，或者2,3两集群，这两个集群分别都只能选举一个集群，满足zookeeper集群搭建数目。<br>　　以上分析，我们从容错率以及防止脑裂两方面说明了3台服务器是搭建集群的最少数目，4台发生脑裂时会造成没有leader节点的错误。<br>###2、下载zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">官网下载地址：http://mirror.bit.edu.cn/apache/zookeeper/</span><br></pre></td></tr></table></figure><p>###3、安装jdk<br>略<br>对应版本为以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ch03 ~]<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">"1.8.0_252"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_252-b09)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)</span><br></pre></td></tr></table></figure><p>###4、解压及初始化zookeeper数据目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">mv zookeeper-3.6.1-bin /usr/<span class="built_in">local</span>/zookeeper</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/zookeeper/conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line">mkdir /data/zookeeper  <span class="comment">#之后修改配置文件时会用到</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /data/zookeeper/myid <span class="comment">#每台服务器都要执行，但id要不一样，如：1 2 3</span></span><br></pre></td></tr></table></figure><p>###5、修改配置zookeeper配置文件zoo.cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/data/zookeeper</span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br><span class="line">server.1=zk01:2888:3888</span><br><span class="line">server.2=zk02:2888:3888</span><br><span class="line">server.3=zk03:2888:3888</span><br></pre></td></tr></table></figure><p>###6、现在已经配置好一台，其它两台可以直接复制过去（注：事先要做好免密登陆）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/<span class="built_in">local</span>/zookeeper zk02:/usr/<span class="built_in">local</span>/</span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/zookeeper zk03:/usr/<span class="built_in">local</span>/</span><br></pre></td></tr></table></figure><p>###7、启动zookeeper服务（每台服务器都要执行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkServer.sh start</span><br><span class="line">出现以下代表为启动成功</span><br><span class="line">[root@ch03 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh stop</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br></pre></td></tr></table></figure><p>###8、查看zookeeper自身的身份可用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ch03 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><p>###9、登陆到zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkCli.sh -server</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zookeeper-集群搭建&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Dnsmasq-简单搭建</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/21/Dnsmasq-%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/21/Dnsmasq-%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-21T08:32:15.000Z</published>
    <updated>2020-05-21T08:33:46.827Z</updated>
    
    <content type="html"><![CDATA[<p>Dnsmasq-简单安装<br> <a id="more"></a><br>最近同事工作中遇到要使用不同的DNS来解析不同域名的情况，<br>想了想就造反Dnsmasq最合适。<br>下面简单搭建记录</p><p>编辑配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dnsmasq config, for a complete example, see:</span></span><br><span class="line"><span class="comment">#  http://oss.segetech.com/intra/srv/dnsmasq.conf</span></span><br><span class="line"><span class="comment">#log all dns queries</span></span><br><span class="line"><span class="built_in">log</span>-queries</span><br><span class="line"><span class="comment">#dont use hosts nameservers</span></span><br><span class="line">no-resolv</span><br><span class="line"><span class="comment">#use cloudflare as default nameservers, prefer 1^4</span></span><br><span class="line">server=1.1.1.1</span><br><span class="line">server=233.5.5.5</span><br><span class="line"><span class="comment">#strict-order</span></span><br><span class="line"><span class="comment">#serve all .company queries using a specific nameserver</span></span><br><span class="line"><span class="comment">#server=/company/10.0.0.1</span></span><br><span class="line"><span class="comment">#explicitly define host-ip mappings（自定义域名IP配置）</span></span><br><span class="line"><span class="comment">#address=/a1.aa.com/192.168.1.168</span></span><br><span class="line">address=/a3.aa.com/192.168.1.111</span><br></pre></td></tr></table></figure><p>启动docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    --name dnsmasq \</span><br><span class="line">    -d \</span><br><span class="line">    -p 53:53/udp \</span><br><span class="line">    -p 8088:8080 \</span><br><span class="line">    -v /opt/dns/dnsmasq.conf:/etc/dnsmasq.conf \</span><br><span class="line">    -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">    -e <span class="string">"HTTP_USER=admin"</span> \</span><br><span class="line">    -e <span class="string">"HTTP_PASS=admin"</span> \</span><br><span class="line">    --restart always \</span><br><span class="line">    jpillora/dnsmasq</span><br></pre></td></tr></table></figure><p>访问Dnsmasq网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://IP:8088</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dnsmasq-简单安装&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>zabbix-4.2.3-安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/20/zabbix-4-2-3-%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/20/zabbix-4-2-3-%E5%AE%89%E8%A3%85/</id>
    <published>2020-05-20T06:02:09.000Z</published>
    <updated>2020-05-20T13:28:39.700Z</updated>
    
    <content type="html"><![CDATA[<p>Zabbix安装篇</p><a id="more"></a><p>1.1 背景：<br>    线上业务至关重要，为了保证业务正常运行及遇到突然情况得以告知运维人员，下面将进行简单的监控软件zabix安装，当然除了还有其它的监控软件。<br>1.2 监控软件的介绍：<br>    cacti、nagios、zabbix、smokeping、open-falcon等等<br>    cacti、smokeping偏向于基础监控，成图非常漂亮<br>    cacti、nagios、zabbix服务端监控中心，需要php环境支持，其中zabbix和cacti都需要mysql作为数据存储，            nagios不用存储历史数据，注重服务或者监控项的状态，zabbix会获取服务或者监控项目的数据，会把数据记录到数据库里，从而可以成图<br>       open-falcon为小米公司开发，开源后受到诸多大公司和运维工程师的追捧，适合大企业，滴滴、360、新浪微博、京东等大公司在使用这款监控软件,但后续以介绍zabbix为主<br>1.3 zabbix的安装<br>    现在我服务器上已经编译安装好了LNMP环境，如果没有可以执行下面的命令进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y make mariadb-server mariadb httpd php mysql-devel gcc net-snmp-devel curl-devel perl-DBI php-gd php-mysql php-bcmath php-mbstring php-xml unixODBC-devel OpenIPMI-devel libxml2-devel libevent-devel libevent  php-gd php-LDAP php-ldap php-xmlreader php-xmlwriter mysql-devel net-snmp-devel</span><br></pre></td></tr></table></figure><p> 1.4 新建一个zabbix账户并创建数据库赋予zabbix权限（下面命令为免登陆远程创建，可以对应修改）<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  useradd zabbix -s /sbin/nologin</span><br><span class="line">mysql -e <span class="string">"create database zabbix character set utf8 collate utf8_bin;"</span></span><br><span class="line">mysql -e <span class="string">"grant all on zabbix.* to zabbix@localhost identified by 'zabbix';"</span></span><br><span class="line">mysql -e <span class="string">"flush privileges;"</span></span><br></pre></td></tr></table></figure><br> 1.5 下载zabbix，并且导入数据库，我这原有最新版zabbix4.2.3所以还是直接使用，若有需要可以到官网下载其它版本也可。<br>(下载URL:<a href="https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/4.2.3/zabbix-4.2.3.tar.gz" target="_blank" rel="noopener">https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/4.2.3/zabbix-4.2.3.tar.gz</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line"> tar -xvf zabbix-4.2.3.tar.gz</span><br><span class="line"> <span class="built_in">cd</span> zabbix-4.2.3/database/mysql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; schema.sql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; images.sql</span><br><span class="line"> mysql -uzabbix -pzabbix zabbix &lt; data.sql</span><br></pre></td></tr></table></figure><p>1.6 编译安装zabbix_server，如果提示错误，就对应yum安装插件包再重新编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-server --<span class="built_in">enable</span>-agent --with-gettext --with-mysql --with-net-snmp --with-libcurl --with-libxml2 --with-openipmi --with-unixodbc --prefix=/usr/<span class="built_in">local</span>/zabbix</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>1.7 编辑httpd.conf文件，使其支持php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIndex index.html index.php</span><br></pre></td></tr></table></figure><p>1.8 修改zabbix_server的配置文件，对应的数据库账号密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><p>1.9 复制启动脚本，并进行对应修改加上执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  cp misc/init.d/fedora/core5/zabbix_server /etc/init.d/</span><br><span class="line">  cp misc/init.d/fedora/core5/zabbix_agentd /etc/init.d/</span><br><span class="line">vim /etc/init.d/zabbix_server</span><br><span class="line">  ZABBIX_BIN=<span class="string">"/usr/local/sbin/zabbix_server"</span>--&gt;ZABBIX_BIN=<span class="string">"/usr/local/zabbix/sbin/zabbix_server"</span></span><br><span class="line">  vim /etc/init.d/zabbix_agentd</span><br><span class="line">  ZABBIX_BIN=<span class="string">"/usr/local/sbin/zabbix_agentd"</span>--&gt;ZABBIX_BIN=<span class="string">"/usr/local/zabbix/sbin/zabbix_agentd"</span></span><br><span class="line">  chmod +x /etc/init.d/zabbix*</span><br></pre></td></tr></table></figure><p>1.10 启动服务端和客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/zabbix_server</span><br><span class="line">/etc/init.d/zabbix_agentd</span><br></pre></td></tr></table></figure><p>1.11 修改php.ini文件支持大小，不然web会容易报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php.ini </span><br><span class="line">max_execution_time = 300</span><br><span class="line">max_input_time = 300</span><br><span class="line">date.timezone =Asia/Shanghai</span><br><span class="line">post_max_size = 32M</span><br></pre></td></tr></table></figure><p>1.12 复制zabbix的php项目到web的目录下，并且赋予用户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -rf php /var/www/html/zabbix</span><br><span class="line">chown zabbix:zabbix -R /var/www/html/zabbix</span><br></pre></td></tr></table></figure><p>1.13 访问web页面在浏览器上输入：<a href="http://IP/zabbix" target="_blank" rel="noopener">http://IP/zabbix</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> --&gt;默认下一步</span><br><span class="line">--&gt;插件检测页面，若有不通过的，直接yum，或者百度，下一步</span><br><span class="line">--&gt;配置数据库，按照实际修改</span><br><span class="line">--&gt;配置zabbix_server，默认或者实际修改</span><br><span class="line">--&gt;install完，默认的账号密码为Admin/zabbix</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zabbix安装篇&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="zabbix" scheme="https://github.com/Piouscc/rz168.io.git/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse-server-集群部署</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/19/ClickHouse-server-%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/19/ClickHouse-server-%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</id>
    <published>2020-05-19T03:20:58.000Z</published>
    <updated>2020-06-22T09:25:31.383Z</updated>
    
    <content type="html"><![CDATA[<p>Clickhouse集群部署</p><a id="more"></a><p>引入一个问题：什么是Clickhouse？<br>ClickHouse是一个用于联机分析(OLAP)的列式数据库管理系统(DBMS)。<br>常见的行式数据库系统有：MySQL、Postgres和MS SQL Server。<br>常见的列式数据库有： Vertica、 Paraccel (Actian Matrix，Amazon Redshift)、 Sybase IQ、 Exasol、 Infobright、 InfiniDB、 MonetDB (VectorWise， Actian Vector)、 LucidDB、 SAP HANA、 Google Dremel、 Google PowerDrill、 Druid、 kdb+。<br>关于Clickhouse性能，可以参考官网（有中文版的）：<a href="https://clickhouse.tech/docs/zh/introduction/performance/" target="_blank" rel="noopener">https://clickhouse.tech/docs/zh/introduction/performance/</a></p><p>主要特性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">真正的面向列的DBMS</span><br><span class="line">实时数据更新</span><br><span class="line">SQL语法支持</span><br><span class="line">多核并行处理</span><br><span class="line">数据高效压缩</span><br><span class="line">分布式处理</span><br><span class="line">数据复制完整性</span><br><span class="line">丰富的索引</span><br><span class="line">集群式管理</span><br><span class="line">可直接读取MySQL数据</span><br><span class="line">适合于在线实时查询</span><br><span class="line">支持近似预估计算</span><br></pre></td></tr></table></figure><p>目前缺点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不支持二级索引</span><br><span class="line">不支持事物</span><br><span class="line">缺乏全面的UPDATE|DELETE的实现</span><br></pre></td></tr></table></figure><p>应用场景：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">海量数据分析、报表和监控</span><br></pre></td></tr></table></figure><p>单机部署，下载文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-client-20.1.4.14-2.noarch.rpm</span><br><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-server-20.1.4.14-2.noarch.rpm</span><br><span class="line">wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-20.1.4.14-2.x86_64.rpm</span><br></pre></td></tr></table></figure><p>下载完成后，直接通过rpm方式安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh clickhouse-*</span><br></pre></td></tr></table></figure><p>安装完成后的目录结构,server和client都是在etc下,由于客户端不用配置，这里主要看server端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 clickhouse-server]<span class="comment"># tree </span></span><br><span class="line">.</span><br><span class="line">├── config.d</span><br><span class="line">├── config.xml   <span class="comment">#配置文件</span></span><br><span class="line">├── preprocessed -&gt; /var/lib/clickhouse//preprocessed_configs</span><br><span class="line">├── users.d</span><br><span class="line">├── metrika.xml  <span class="comment">#集群配置文件，此文件需要自己创建</span></span><br><span class="line">└── users.xml <span class="comment">#用户配置文件</span></span><br></pre></td></tr></table></figure><p>创建所需目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/clickhouse/<span class="built_in">log</span>/</span><br><span class="line">mkdir -p /data/clickhouse/tmp/</span><br><span class="line">touch /data/clickhouse/<span class="built_in">log</span>/server.log</span><br><span class="line">touch /data/clickhouse/<span class="built_in">log</span>/error.log</span><br><span class="line">chown clickhouse.clickhouse -R /data/clickhouse</span><br></pre></td></tr></table></figure><p>配置config.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;logger&gt;</span><br><span class="line">        &lt;level&gt;trace&lt;/level&gt;</span><br><span class="line">        &lt;<span class="built_in">log</span>&gt;/data/clickhouse/<span class="built_in">log</span>/server.log&lt;/<span class="built_in">log</span>&gt;</span><br><span class="line">        &lt;errorlog&gt;/data/clickhouse/<span class="built_in">log</span>/error.log&lt;/errorlog&gt;</span><br><span class="line">        &lt;size&gt;1000M&lt;/size&gt;</span><br><span class="line">        &lt;count&gt;10&lt;/count&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;http_port&gt;8123&lt;/http_port&gt;</span><br><span class="line">    &lt;tcp_port&gt;9000&lt;/tcp_port&gt;</span><br><span class="line">    &lt;interserver_http_port&gt;9009&lt;/interserver_http_port&gt;</span><br><span class="line">    &lt;listen_host&gt;0.0.0.0&lt;/listen_host&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;path&gt;/data/clickhouse/&lt;/path&gt;</span><br><span class="line">    &lt;tmp_path&gt;/data/clickhouse/tmp/&lt;/tmp_path&gt;</span><br><span class="line">    &lt;users_config&gt;users.xml&lt;/users_config&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;default_profile&gt;default&lt;/default_profile&gt;</span><br><span class="line">    &lt;default_database&gt;default&lt;/default_database&gt;</span><br><span class="line">    &lt;remote_servers incl=<span class="string">"clickhouse_remote_servers"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;query_log&gt;</span><br><span class="line">        &lt;database&gt;system&lt;/database&gt;</span><br><span class="line">        &lt;table&gt;query_log&lt;/table&gt;</span><br><span class="line">        &lt;partition_by&gt;toYYYYMM(event_date)&lt;/partition_by&gt;</span><br><span class="line">        &lt;flush_interval_milliseconds&gt;7500&lt;/flush_interval_milliseconds&gt;</span><br><span class="line">    &lt;/query_log&gt;</span><br><span class="line">    &lt;mark_cache_size&gt;5368709120&lt;/mark_cache_size&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>然后启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start clickhouse-server</span><br></pre></td></tr></table></figure><p>登陆clickhouse,此处因为use.xml没配置默认用户不配置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=</span><br><span class="line"></span><br><span class="line">[root@ch01 clickhouse-server]<span class="comment"># clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=</span></span><br><span class="line">ClickHouse client version 20.1.4.14 (official build).</span><br><span class="line">Connecting to 127.0.0.1:6767 as user stat67.</span><br><span class="line">Connected to ClickHouse server version 20.1.4 revision 54431.</span><br><span class="line"></span><br><span class="line">ck-0001 :)</span><br></pre></td></tr></table></figure><hr><p>以上就是Clickhouse单机部署，下面部署则为Clickhouse集群一分片两副本，两分片两副本，三分片两副本，同理<br>服务器信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ch01 192.168.1.2</span><br><span class="line">ch02 192.168.1.3</span><br></pre></td></tr></table></figure><p>由于Clickhouse集群基于zookeeper，所以先配置zk集群<br>zookeeper下载与解压，注意这理下载zk，一定要下载带bin，不然没法用（ch01,ch02安装同理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/ &amp;&amp; wget https://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">tar -xvf apache-zookeeper-3.6.1-bin.tar.gz &amp;&amp; mv apache-zookeeper-3.6.1-bin ../zookeeper</span><br><span class="line"><span class="built_in">cd</span> ../zookeeper/conf &amp;&amp; cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p>配置zookeeper的配置文件zoo.cfg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 conf]<span class="comment"># more zoo.cfg</span></span><br><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/data/zookeeper    <span class="comment">#此目录需要创建</span></span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to "0" to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br><span class="line">server.1=ch0001:2888:3888</span><br><span class="line">server.2=ch0002:2888:3888</span><br></pre></td></tr></table></figure><p>启动zookeeper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/zookeeper/bin/zkServer.sh start</span><br></pre></td></tr></table></figure><p>查看自身身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ch01 conf]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line">[root@ck02 ~]<span class="comment"># /usr/local/zookeeper/bin/zkServer.sh status</span></span><br><span class="line">/usr/bin/java</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost.</span><br><span class="line">Mode: follower</span><br></pre></td></tr></table></figure><p>配置clickhouse  config.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;logger&gt;</span><br><span class="line">        &lt;level&gt;trace&lt;/level&gt;</span><br><span class="line">        &lt;<span class="built_in">log</span>&gt;/data/clickhouse/<span class="built_in">log</span>/server.log&lt;/<span class="built_in">log</span>&gt;</span><br><span class="line">        &lt;errorlog&gt;/data/clickhouse/<span class="built_in">log</span>/error.log&lt;/errorlog&gt;</span><br><span class="line">        &lt;size&gt;1000M&lt;/size&gt;</span><br><span class="line">        &lt;count&gt;10&lt;/count&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;http_port&gt;8123&lt;/http_port&gt;</span><br><span class="line">    &lt;tcp_port&gt;6767&lt;/tcp_port&gt;</span><br><span class="line">    &lt;interserver_http_port&gt;9009&lt;/interserver_http_port&gt;</span><br><span class="line">    &lt;listen_host&gt;0.0.0.0&lt;/listen_host&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;path&gt;/data/clickhouse/&lt;/path&gt;</span><br><span class="line">    &lt;tmp_path&gt;/data/clickhouse/tmp/&lt;/tmp_path&gt;</span><br><span class="line">    &lt;users_config&gt;users.xml&lt;/users_config&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;default_profile&gt;default&lt;/default_profile&gt;</span><br><span class="line">    &lt;default_database&gt;default&lt;/default_database&gt;</span><br><span class="line">    &lt;remote_servers incl=<span class="string">"clickhouse_remote_servers"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;query_log&gt;</span><br><span class="line">        &lt;database&gt;system&lt;/database&gt;</span><br><span class="line">        &lt;table&gt;query_log&lt;/table&gt;</span><br><span class="line">        &lt;partition_by&gt;toYYYYMM(event_date)&lt;/partition_by&gt;</span><br><span class="line">        &lt;flush_interval_milliseconds&gt;7500&lt;/flush_interval_milliseconds&gt;</span><br><span class="line">    &lt;/query_log&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;zookeeper incl=<span class="string">"zookeeper-servers"</span> optional=<span class="string">"true"</span> /&gt;</span><br><span class="line">    &lt;macros incl=<span class="string">"macros"</span> optional=<span class="string">"true"</span> /&gt;</span><br><span class="line">    &lt;include_from&gt;/etc/clickhouse-server/metrika.xml&lt;/include_from&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;mark_cache_size&gt;5368709120&lt;/mark_cache_size&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>配置clickhouse集群文件metrika.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;yandex&gt;</span><br><span class="line">&lt;clickhouse_remote_servers&gt;</span><br><span class="line">    &lt;report_shards_replicas&gt;</span><br><span class="line">        &lt;shard&gt;</span><br><span class="line">            &lt;weight&gt;1&lt;/weight&gt;</span><br><span class="line">            &lt;internal_replication&gt;<span class="literal">true</span>&lt;/internal_replication&gt;</span><br><span class="line">            &lt;replica&gt;</span><br><span class="line">                &lt;host&gt;192.168.1.2&lt;/host&gt;</span><br><span class="line">                &lt;port&gt;9000&lt;/port&gt;</span><br><span class="line">                &lt;user&gt;default&lt;/user&gt;</span><br><span class="line">                &lt;password&gt;6lYaUiFi&lt;/password&gt;</span><br><span class="line">            &lt;/replica&gt;</span><br><span class="line">            &lt;replica&gt;</span><br><span class="line">                &lt;host&gt;192.168.1.3&lt;/host&gt;</span><br><span class="line">                &lt;port&gt;9000&lt;/port&gt;</span><br><span class="line">                &lt;user&gt;default&lt;/user&gt;</span><br><span class="line">                &lt;password&gt;6lYaUiFi&lt;/password&gt;</span><br><span class="line">            &lt;/replica&gt;</span><br><span class="line">        &lt;/shard&gt;</span><br><span class="line">    &lt;/report_shards_replicas&gt;</span><br><span class="line">&lt;/clickhouse_remote_servers&gt;</span><br><span class="line"> </span><br><span class="line">&lt;macros&gt;</span><br><span class="line">    &lt;shard&gt;shard_01&lt;/shard&gt;</span><br><span class="line">    &lt;replica&gt;replica_01&lt;/replica&gt;</span><br><span class="line">&lt;/macros&gt;</span><br><span class="line"> </span><br><span class="line">&lt;networks&gt;</span><br><span class="line">   &lt;ip&gt;::/0&lt;/ip&gt;</span><br><span class="line">&lt;/networks&gt;</span><br><span class="line"> </span><br><span class="line">&lt;zookeeper-servers&gt;</span><br><span class="line">    &lt;node index=<span class="string">"1"</span>&gt;</span><br><span class="line">        &lt;host&gt;192.168.1.2&lt;/host&gt;</span><br><span class="line">        &lt;port&gt;2181&lt;/port&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line"></span><br><span class="line">    &lt;node index=<span class="string">"2"</span>&gt;</span><br><span class="line">        &lt;host&gt;192.168.1.3&lt;/host&gt;</span><br><span class="line">        &lt;port&gt;2181&lt;/port&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">&lt;/zookeeper-servers&gt;</span><br><span class="line"> </span><br><span class="line">&lt;clickhouse_compression&gt;</span><br><span class="line">    &lt;<span class="keyword">case</span>&gt;</span><br><span class="line">        &lt;min_part_size&gt;10000000000&lt;/min_part_size&gt;</span><br><span class="line">        &lt;min_part_size_ratio&gt;0.01&lt;/min_part_size_ratio&gt;</span><br><span class="line">        &lt;method&gt;lz4&lt;/method&gt;</span><br><span class="line">    &lt;/<span class="keyword">case</span>&gt;</span><br><span class="line">&lt;/clickhouse_compression&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>配置用户文件user.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;yandex&gt;</span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;!-- 读写用户设置  --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;max_memory_usage&gt;10000000000&lt;/max_memory_usage&gt;</span><br><span class="line">            &lt;use_uncompressed_cache&gt;0&lt;/use_uncompressed_cache&gt;</span><br><span class="line">            &lt;load_balancing&gt;random&lt;/load_balancing&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">        &lt;!-- 只写用户设置  --&gt;</span><br><span class="line">        &lt;<span class="built_in">readonly</span>&gt;</span><br><span class="line">            &lt;max_memory_usage&gt;10000000000&lt;/max_memory_usage&gt;</span><br><span class="line">            &lt;use_uncompressed_cache&gt;0&lt;/use_uncompressed_cache&gt;</span><br><span class="line">            &lt;load_balancing&gt;random&lt;/load_balancing&gt;</span><br><span class="line">            &lt;<span class="built_in">readonly</span>&gt;1&lt;/<span class="built_in">readonly</span>&gt;</span><br><span class="line">        &lt;/<span class="built_in">readonly</span>&gt;</span><br><span class="line">    &lt;/profiles&gt;</span><br><span class="line">    &lt;!-- 配额  --&gt;</span><br><span class="line">    &lt;quotas&gt;</span><br><span class="line">        &lt;!-- Name of quota. --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;interval&gt;</span><br><span class="line">                &lt;duration&gt;3600&lt;/duration&gt;</span><br><span class="line">                &lt;queries&gt;0&lt;/queries&gt;</span><br><span class="line">                &lt;errors&gt;0&lt;/errors&gt;</span><br><span class="line">                &lt;result_rows&gt;0&lt;/result_rows&gt;</span><br><span class="line">                &lt;read_rows&gt;0&lt;/read_rows&gt;</span><br><span class="line">                &lt;execution_time&gt;0&lt;/execution_time&gt;</span><br><span class="line">            &lt;/interval&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">    &lt;/quotas&gt;</span><br><span class="line">    &lt;users&gt;</span><br><span class="line">        &lt;!-- 读写用户  --&gt;</span><br><span class="line">        &lt;default&gt;</span><br><span class="line">            &lt;password_sha256_hex&gt;967f3bf355dddfabfca1c9f5cab39352b2ec1cd0b05f9e1e6b8f629705fe7d6e&lt;/password_sha256_hex&gt;</span><br><span class="line">            &lt;networks incl=<span class="string">"networks"</span> replace=<span class="string">"replace"</span>&gt;</span><br><span class="line">                &lt;ip&gt;::/0&lt;/ip&gt;</span><br><span class="line">            &lt;/networks&gt;</span><br><span class="line">            &lt;profile&gt;default&lt;/profile&gt;</span><br><span class="line">            &lt;quota&gt;default&lt;/quota&gt;</span><br><span class="line">        &lt;/default&gt;</span><br><span class="line">    &lt;/users&gt;</span><br><span class="line">&lt;/yandex&gt;</span><br></pre></td></tr></table></figure><p>启动clickhouse，由于我们是rpm方式安装的，可以用以下两种方式启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/clickhouse-server start</span><br><span class="line">systemctl start clickhouse-server</span><br></pre></td></tr></table></figure><p>查看集群情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client --host=127.0.0.1 --port=9000 --user=default --password=6lYaUiFi</span><br><span class="line">ck01 :) select * from system.clusters;</span><br><span class="line"></span><br><span class="line">SELECT *</span><br><span class="line">FROM system.clusters</span><br><span class="line"></span><br><span class="line">┌─cluster────────────────┬─shard_num─┬─shard_weight─┬─replica_num─┬─host_name─┬─host_address─┬─port─┬─is_local─┬─user────┬─default_database─┬─errors_count─┬─estimated_recovery_time─┐</span><br><span class="line">│ report_shards_replicas │         1 │            1 │           1 │   ch01    │ 192.168.1.2   │ 9000 │        1 │ default │                  │            0 │                       0 │</span><br><span class="line">│ report_shards_replicas │         2 │            1 │           1 │   ch02    │ 192.168.1.3   │ 9000 │        0 │ default │                  │            0 │                       0 │</span><br><span class="line">└────────────────────────┴───────────┴──────────────┴─────────────┴───────────┴──────────────┴──────┴──────────┴─────────┴──────────────────┴──────────────┴─────────────────────────┘</span><br><span class="line"></span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span>. Elapsed: 0.001 sec. </span><br><span class="line"></span><br><span class="line">ck01 :)</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database ontime;</span><br><span class="line">use ontime;</span><br><span class="line"></span><br><span class="line">CREATE TABLE ontime (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(<span class="string">'/clickhouse/tables/01-01/ontime'</span>,<span class="string">'cluster01-01-1'</span>,FlightDate,(Year, FlightDate),8192); <span class="comment">#cdh01的实例1，分片01，副本1</span></span><br><span class="line">CREATE TABLE ontime (FlightDate Date,Year UInt16) ENGINE = ReplicatedMergeTree(<span class="string">'/clickhouse/tables/01-02/ontime'</span>,<span class="string">'cluster01-01-2'</span>,FlightDate,(Year, FlightDate),8192); <span class="comment">#cdh01的实例2，分片01，副本2</span></span><br><span class="line">CREATE TABLE ontime_all (FlightDate Date,Year UInt16) ENGINE= Distributed(perftest_3shards_2replicas, ontime, ontime, rand());  <span class="comment">#每个实例都执行</span></span><br></pre></td></tr></table></figure><p>当我们从某个节点的_all表插入相应数据，然后ch01,02的数据都是相等的，如果不相等请查看对应日志文件错误，类似以下错误可以通过重启zk再重启clickhouse解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.displayText() = DB::Exception: No interserver IO endpoint named DataPartsExchange:/clickhouse/tables/01-01/ontime</span><br></pre></td></tr></table></figure><p>遇到问题补充：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error&gt; default.my_table (StorageReplicatedMergeTree): DB::StorageReplicatedMergeTree::queueTask()::&lt;lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&amp;)&gt;: Poco::Exception. Code: 1000, e.code() = 0, e.displayText() = Host not found: clickhouse-01-0.clickhouses.default.svc.cluster.local</span><br></pre></td></tr></table></figure><p>只需要看主机名，并设置即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostname -f </span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname ****</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Clickhouse集群部署&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>redis-6.0部署</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-6-0-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-6-0-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</id>
    <published>2020-05-15T07:56:35.000Z</published>
    <updated>2020-06-22T09:27:58.265Z</updated>
    
    <content type="html"><![CDATA[<p>Redis-6.0安装</p><a id="more"></a><p>1、redis简介，这边省略，若有需要直接查看上一篇redis哨兵配置<br>2、redis6.0更新最大特性：Redis 6.0将在今年年底发布，其中引入的最重大的改变就是多线程IO<br>下面进入正题，安装部署流程<br>#安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install wget nc telnet gcc gcc-c++ autoconf cmake bison libevent libevent-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel libcurl libcurl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers libpcap libpcap-devel libtool iptables iptables-services rsync file perl perl-DBD-MySQL perl-devel sysstat mailx ntpdate vim jwhois <span class="built_in">bind</span>-utils git ipset ipset-service tcpdump iftop inotify-tools gcc-g77 vsftpd subversion strace java python-pip net-tools mtr gettext gettext-devel</span><br></pre></td></tr></table></figure><p>#由于redis6.0需要安装gcc_9.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install centos-release-scl</span><br><span class="line">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-9 bash</span><br></pre></td></tr></table></figure><p>#若不更新gcc会提示以下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.c:xxxx:xx: error: ‘xxxxxxxx’ has no member named ‘xxxxx’</span><br></pre></td></tr></table></figure><p>#添加系统变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"source /opt/rh/devtoolset-9/enable"</span> &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><p>#redis-6.0部署脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_redis</span></span> () &#123;</span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        <span class="keyword">if</span> [ ! -f <span class="string">" redis-6.0.1.tar.gz"</span> ]; <span class="keyword">then</span></span><br><span class="line">           wget http://download.redis.io/releases/redis-6.0.1.tar.gz</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        tar -zxvf /usr/<span class="built_in">local</span>/src/redis-6.0.1.tar.gz</span><br><span class="line">        <span class="built_in">cd</span> redis-6.0.1</span><br><span class="line">        make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br><span class="line">        mkdir -p /usr/<span class="built_in">local</span>/redis/&#123;etc,var&#125;</span><br><span class="line">        rsync -avz redis.conf  /usr/<span class="built_in">local</span>/redis/etc/</span><br><span class="line">        sed -i <span class="string">"s@logfile.*@logfile /usr/local/redis/var/redis.log@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">"s@^dir.*@dir /usr/local/redis/var@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">'s/daemonize no/daemonize yes/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">        sed -i <span class="string">'s/^# bind 127.0.0.1/bind 127.0.0.1/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_redis</span><br></pre></td></tr></table></figure><p>启动redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/ &amp;&amp; ./redis-server ../etc/redis.conf</span><br></pre></td></tr></table></figure><p>查看版本是否为6.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis &amp;&amp; ./redis-server -v</span><br><span class="line">Redis server v=6.0.1 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=0</span><br></pre></td></tr></table></figure><p>redis 命令参考见官网：<a href="https://redis.io/commands" target="_blank" rel="noopener">https://redis.io/commands</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis-6.0安装&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>redis-主从-哨兵配置</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-%E4%B8%BB%E4%BB%8E-%E5%93%A8%E5%85%B5/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/redis-%E4%B8%BB%E4%BB%8E-%E5%93%A8%E5%85%B5/</id>
    <published>2020-05-15T03:04:16.000Z</published>
    <updated>2020-06-22T09:28:04.297Z</updated>
    
    <content type="html"><![CDATA[<p>Redis主从哨兵集群安装</p><a id="more"></a><p>1、1 Redis官网简介<br>Redis是一个开源（BSD许可），内存存储的数据结构服务器，可用作数据库，高速缓存和消息队列代理。它支持字符串、哈希表、列表、集合、有序集合，位图，hyperloglogs等数据类型。内置复制、Lua脚本、LRU收回、事务以及不同级别磁盘持久化功能，同时通过Redis Sentinel提供高可用，通过Redis Cluster提供自动分区。官网链接：<a href="https://www.redis.net.cn/" target="_blank" rel="noopener">https://www.redis.net.cn/</a><br>1、2 Redis作用<br>相信redis这个名称大家都不陌生，为什么？<br>因为redis可以用来做中间插件缓存</p><p>1、3 Redis的优、缺点<br>性能极高 – Redis能支持超过 100K+ 每秒的读写频率。<br>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。<br>原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。<br>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p><p>Redis的缺点<br>是数据库容量受到物理内存的限制,不能用作海量数据的高性能读写,因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。</p><p>总结： Redis受限于特定的场景，专注于特定的领域之下，速度相当之快，目前还未找到能替代使用产品。</p><p>前期准备，安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install wget nc telnet gcc gcc-c++ autoconf cmake bison libevent libevent-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel libcurl libcurl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers libpcap libpcap-devel libtool iptables iptables-services rsync file perl perl-DBD-MySQL perl-devel sysstat mailx ntpdate vim jwhois <span class="built_in">bind</span>-utils git ipset ipset-service tcpdump iftop inotify-tools gcc-g77 vsftpd subversion strace java python-pip net-tools mtr gettext gettext-devel</span><br></pre></td></tr></table></figure><p>1、4 架构为单机模式：一主多从多哨兵</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 redis-master redis(6379)、sentnel(26379)</span><br><span class="line">127.0.0.1 redis-slave  redis(6380)、sentnel(26380)</span><br><span class="line">127.0.0.1 redis-slave  redis(6381)、sentnel(26381)</span><br></pre></td></tr></table></figure><p>1、5 Redis下载及安装（脚本形式,只要装一次，然后直接复制配置文件进行修改，多机则都运行一次安装脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim redis_install.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_redis</span></span> () &#123;</span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        <span class="keyword">if</span> [ ! -f <span class="string">" redis-4.0.1.tar.gz"</span> ]; <span class="keyword">then</span></span><br><span class="line">           wget http://download.redis.io/releases/redis-5.0.4.tar.gz</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">        tar -zxvf /usr/<span class="built_in">local</span>/src/redis-5.0.4.tar.gz</span><br><span class="line">        <span class="built_in">cd</span> redis-5.0.4</span><br><span class="line">        make PREFIX=/usr/<span class="built_in">local</span>/redis install</span><br><span class="line">        mkdir -p /usr/<span class="built_in">local</span>/redis/&#123;etc,var&#125;</span><br><span class="line">        rsync -avz redis.conf  /usr/<span class="built_in">local</span>/redis/etc/</span><br><span class="line">        sed -i <span class="string">"s@logfile.*@logfile /usr/local/redis/var/redis.log@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">"s@^dir.*@dir /usr/local/redis/var@"</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf  <span class="comment">#相当于替换</span></span><br><span class="line">        sed -i <span class="string">'s/daemonize no/daemonize yes/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">        sed -i <span class="string">'s/^# bind 127.0.0.1/bind 127.0.0.1/g'</span> /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_redis</span><br></pre></td></tr></table></figure><p>1、6 复制配置文件进行对应修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/etc</span><br><span class="line">sed -i <span class="string">'/^#/d;/^$/d'</span> redis.conf</span><br><span class="line">mv redis.conf redis-6379.conf</span><br><span class="line">cp redis-6379.conf redis-6380.conf</span><br><span class="line">cp redis-6379.conf redis-6381.conf</span><br></pre></td></tr></table></figure><p>为了好标记，这里以·开头为修改部分，下面直接粘贴三个配置文件<br>redis-6379.comf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line"><span class="comment"># Generated by CONFIG REWRITE</span></span><br></pre></td></tr></table></figure><p>redis-6380.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6380</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">·appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line">·slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><p>redis-6381.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">·port 6381</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile <span class="string">"/var/run/redis_6379.pid"</span></span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis.log"</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename <span class="string">"dump.rdb"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/var"</span></span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">·appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br><span class="line">·slaveof 127.0.0.1 6379</span><br></pre></td></tr></table></figure><p>1、7 上面为redis的配置，下面配置三个哨兵（sentinel）,和上面同理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/data/sentinel</span><br></pre></td></tr></table></figure><p>sentinel-6379.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26379</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6379.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6379 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>sentinel-6380.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26380</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6380.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6380 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>sentinel-6381.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">port 26381</span><br><span class="line">pidfile <span class="string">"/usr/local/redis/var/redis-6381.pid"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis/data/sentinel"</span></span><br><span class="line">daemonize yes</span><br><span class="line">protected-mode no</span><br><span class="line">logfile <span class="string">"/usr/local/redis/var/redis-sentinel.log"</span></span><br><span class="line">sentinel monitor redisMaster 127.0.0.1 6381 2 </span><br><span class="line">sentinel down-after-milliseconds redisMaster 10000 </span><br><span class="line">sentinel parallel-syncs redisMaster 1</span><br><span class="line">sentinel failover-timeout redisMaster 60000</span><br></pre></td></tr></table></figure><p>1、8 配置文件现在已经配置完，下面启动服务<br>cd /usr/local/redis/bin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./redis-server ../etc/redis-6379.conf</span><br><span class="line">./redis-server ../etc/redis-6380.conf</span><br><span class="line">./redis-server ../etc/redis-6381.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6379.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6380.conf</span><br><span class="line">./redis-sentinel ../data/sentinel/sentinel-6381.conf</span><br></pre></td></tr></table></figure><p>netstat -ntlp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_16_2_centos bin]<span class="comment"># netstat -ntlp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      19533/./redis-serve </span><br><span class="line">tcp        0      0 0.0.0.0:26379           0.0.0.0:*               LISTEN      18205/./redis-senti </span><br><span class="line">tcp        0      0 0.0.0.0:26380           0.0.0.0:*               LISTEN      18211/./redis-senti </span><br><span class="line">tcp        0      0 127.0.0.1:6380          0.0.0.0:*               LISTEN      17831/./redis-serve </span><br><span class="line">tcp        0      0 127.0.0.1:6381          0.0.0.0:*               LISTEN      2681/./redis-server </span><br><span class="line">tcp        0      0 0.0.0.0:26381           0.0.0.0:*               LISTEN      18227/./redis-senti </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1386/sshd           </span><br><span class="line">tcp6       0      0 :::26379                :::*                    LISTEN      18205/./redis-senti </span><br><span class="line">tcp6       0      0 :::26380                :::*                    LISTEN      18211/./redis-senti </span><br><span class="line">tcp6       0      0 :::26381                :::*                    LISTEN      18227/./redis-senti</span><br></pre></td></tr></table></figure><p>1、9 测试，查看自身为什么身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 127.0.0.1 -p 6379 INFO|grep role</span><br><span class="line">role:master</span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6380 INFO|grep role</span><br><span class="line">role:slave</span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6381 INFO|grep role</span><br><span class="line">role:slave</span><br></pre></td></tr></table></figure><p>1、10 登陆到master进行写入数据，看slave是否有同步(分别在三个介面操作，方便分别),因我这边已经测试主从切换，master现在为6380</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 127.0.0.1 -p 6379 </span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6380 </span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6381</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis主从哨兵集群安装&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="DB" scheme="https://github.com/Piouscc/rz168.io.git/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>docker-ce-安装</title>
    <link href="https://github.com/Piouscc/rz168.io.git/2020/05/15/docker-ce-%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/Piouscc/rz168.io.git/2020/05/15/docker-ce-%E5%AE%89%E8%A3%85/</id>
    <published>2020-05-15T02:59:17.000Z</published>
    <updated>2020-06-22T09:27:52.361Z</updated>
    
    <content type="html"><![CDATA[<p>Docker-ce安装<br> <a id="more"></a><br>1、卸载docker旧版本相关<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker docker-client  docker-client-latest docker-common docker-latest \</span><br><span class="line">docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux  docker-engine</span><br></pre></td></tr></table></figure><br>2、安装新版docker源<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils            device-mapper-persistent-data            lvm2</span><br><span class="line">yum-config-manager     --add-repo     https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><br> 3、直接yum安装docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce</span><br></pre></td></tr></table></figure><br> 启动docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><br> 配置下载镜像加速，为了避免硬盘被log占用，导致空间不足，则加上log配置，编辑<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> vim /etc/docker/daemon.json</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://l6f3pp3g.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>:<span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>:&#123; <span class="string">"max-size"</span> :<span class="string">"100m"</span>,<span class="string">"max-file"</span>:<span class="string">"10"</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 刷新配置重启docker<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker-ce安装&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://github.com/Piouscc/rz168.io.git/tags/linux/"/>
    
      <category term="docker" scheme="https://github.com/Piouscc/rz168.io.git/tags/docker/"/>
    
  </entry>
  
</feed>
